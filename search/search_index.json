{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"BridgePRS is a Bayesian method that utilises ridge regression developed to tackle the \" PRS Portability Problem\". The PRS portability problem causes lower PRS accuracy in target populations which were not included in the GWAS base populations used to estimate the PRS. This is because of differences in linkage disequilibrium (LD), allele frequency and gene\u2013environment interactions affecting causal effect sizes between the base and target populations. Package Downloads Operating System Link Notes Linux 64-bit v1.0.2 Updated 1-20-2024 Mac 64-bit v1.0.2 Updated 1-20-2024 Windows NA Not Available 1000G Ref Panel 1000G_ref.tar.gz Optional (Unzip into data directory to use) Latest Updates 2023-09-15 (v0.1.7) We have added sample thousand genomes data. update log can be found here Overview BridgePRS is written in R with a Python wrapper. Plink. is used in the first stage of the modelling for clumping and thresholding (all markers within clumps are retained for analysis). For more information on installing dependencies, please refer to Requirements . To get BridgePRS running using toy data see our Quick Start Tutorial. . Following the Quick Start, the full guide provides more realistic examples to help you get started with your own data. Citation: Our Manuscript is published in Nature Genetics Please cite our paper : Hoggart C, Choi SW, Garc\u00eda-Gonz\u00e1lez J, Souaiaia T, Preuss M, O'Reilly P. BridgePRS leverages shared genetic effects across ancestries to increase polygenic risk score portability. Nat Genet 56, 180\u2013186 (2024). https://doi.org/10.1038/s41588-023-01583-9 Contact For questions about the methodology, this website, or our manuscript please contact Dr Clive Hoggart , Dr Tade Souaiaia , or Dr Paul O'Reilly . For source code and coding issues please visit the bridgePRS github here . Acknowledgements We would like to thank Brian Fulton-Howard for his feedback and help with testing.","title":"Home"},{"location":"#package-downloads","text":"Operating System Link Notes Linux 64-bit v1.0.2 Updated 1-20-2024 Mac 64-bit v1.0.2 Updated 1-20-2024 Windows NA Not Available 1000G Ref Panel 1000G_ref.tar.gz Optional (Unzip into data directory to use) Latest Updates","title":"Package Downloads"},{"location":"#2023-09-15-v017","text":"We have added sample thousand genomes data. update log can be found here","title":"2023-09-15 (v0.1.7)"},{"location":"#overview","text":"BridgePRS is written in R with a Python wrapper. Plink. is used in the first stage of the modelling for clumping and thresholding (all markers within clumps are retained for analysis). For more information on installing dependencies, please refer to Requirements . To get BridgePRS running using toy data see our Quick Start Tutorial. . Following the Quick Start, the full guide provides more realistic examples to help you get started with your own data. Citation: Our Manuscript is published in Nature Genetics Please cite our paper : Hoggart C, Choi SW, Garc\u00eda-Gonz\u00e1lez J, Souaiaia T, Preuss M, O'Reilly P. BridgePRS leverages shared genetic effects across ancestries to increase polygenic risk score portability. Nat Genet 56, 180\u2013186 (2024). https://doi.org/10.1038/s41588-023-01583-9","title":"Overview"},{"location":"#contact","text":"For questions about the methodology, this website, or our manuscript please contact Dr Clive Hoggart , Dr Tade Souaiaia , or Dr Paul O'Reilly . For source code and coding issues please visit the bridgePRS github here .","title":"Contact"},{"location":"#acknowledgements","text":"We would like to thank Brian Fulton-Howard for his feedback and help with testing.","title":"Acknowledgements"},{"location":"guide_args/","text":"This page contains all command available in BridgePRS. Tips When constructing new parameters, we follow the following rule: if the command has effect on any file that is not the target, it will have a prefix of the file name. For example, --base-info applies INFO score filtering on the base file, --ld-info perform INFO score filtering on the LD reference file and --info applies the INFO score filtering on the target file. Input Population Files/Arguments --sumstats_prefix Path to sumstats data --sumstats_suffix Sumstats Suffix --phenotype_files phenotype test and validation data --pop_config(s) population configuration file(s) --pop or --pops population names (AFR, EUR, etc) --snp_file List of QCed SNP ids System Level Toggles/Arguments --cores By default bridgePRS is parralelized across (n-1) cores -o Output folder for BridgePRS --platform Force platform (Linux or MacOS) --verbose Toggle Verbose Mode On --noPlots Skip Post-Pipeline Analysis (Plotting) --restart Repeat previously completed steps Parameter Arguments --fst fst value --max_clump_size Max Size for Clumping --thinned_snplist Thinned snp list for large clumps Internal File Arguments --model_file model result generated from the build-model subprogram --clump_prefix prefix for files generated by clump step --beta_prefix prefix for files generated by beta step --predict_prefix prefix for files generated by predict step --result_file prs result files File Column Names Phenotype Files --phenotype Phenotype File Field: phenotype --covariates Phenotype File Field: comma separated list of covariates Sumstats Files --ssf-snpid Sumstats field: snp ID --ssf-ref Sumstats Field: reference allele --ssf-alt Sumstats Field: alt allele --ssf-maf Sumstats Field: MAF --ssf-beta Sumstats Field: linear regression effect or log odds --ssf-se Sumstats field: standard error --ssf-p Sumstats field: P-value --ssf-n Sumstats Field: Sample Size","title":"All Arguments"},{"location":"guide_args/#input-population-filesarguments","text":"--sumstats_prefix Path to sumstats data --sumstats_suffix Sumstats Suffix --phenotype_files phenotype test and validation data --pop_config(s) population configuration file(s) --pop or --pops population names (AFR, EUR, etc) --snp_file List of QCed SNP ids","title":"Input Population Files/Arguments"},{"location":"guide_args/#system-level-togglesarguments","text":"--cores By default bridgePRS is parralelized across (n-1) cores -o Output folder for BridgePRS --platform Force platform (Linux or MacOS) --verbose Toggle Verbose Mode On --noPlots Skip Post-Pipeline Analysis (Plotting) --restart Repeat previously completed steps","title":"System Level Toggles/Arguments"},{"location":"guide_args/#parameter-arguments","text":"--fst fst value --max_clump_size Max Size for Clumping --thinned_snplist Thinned snp list for large clumps","title":"Parameter Arguments"},{"location":"guide_args/#internal-file-arguments","text":"--model_file model result generated from the build-model subprogram --clump_prefix prefix for files generated by clump step --beta_prefix prefix for files generated by beta step --predict_prefix prefix for files generated by predict step --result_file prs result files","title":"Internal File Arguments"},{"location":"guide_args/#file-column-names","text":"","title":"File Column Names"},{"location":"guide_args/#phenotype-files","text":"--phenotype Phenotype File Field: phenotype --covariates Phenotype File Field: comma separated list of covariates","title":"Phenotype Files"},{"location":"guide_args/#sumstats-files","text":"--ssf-snpid Sumstats field: snp ID --ssf-ref Sumstats Field: reference allele --ssf-alt Sumstats Field: alt allele --ssf-maf Sumstats Field: MAF --ssf-beta Sumstats Field: linear regression effect or log odds --ssf-se Sumstats field: standard error --ssf-p Sumstats field: P-value --ssf-n Sumstats Field: Sample Size","title":"Sumstats Files"},{"location":"guide_background/","text":"BridgePRS is a trans-ancestry PRS software which improves polygenic risk score analysis in under-represented target populations by combining summary statistics from under-represented target populations (e.g. Africans) with those from a powerful GWAS (e.g. Europeans). Background PRS require as input summary statistics from genome wide association studies. If you are unfamiliar with GWAS or need a refresher consider reading this paper . Genome wide association studies (GWAS) involve analyzing the genomes of a larger group of individuals. This involves looking screening millions of genetic variants (SNP) for association with a particular trait. For a binary trait (like blue or brown eyes) this involves comparing the frequency of genetic variations in each group to produce an odds-ratio (measure of association) and a p-value to measure the signficance of the realtionship at each SNP. For continuous measures (like height) this results in an effect size (measure of continuous association) and p-value that measure the significance of our relationship. GWAS results can be summarized in a sumstats file which looks like this: SNP BP REF ALT BETA PV NOTES rs3094315 10523 A G 1.491 0.0029 Positive ( \\(>1\\) ) Trait Association rs3131972 91345 A G 0.817 0.0008 Negative ( \\(<1\\) ) Trait Association rs3131971 23040 T C 1.001 0.5332 Insignificant ( \\(PV>0.05\\) ) Association PRS basics Creating individual polygenic scores involves combine information across many genetic variants. A score is calculated by summing the genetic association values (beta-weights) for each allele in an individual, therefore, variants with stronger associations have a larger impact on the overall score. PRS software use different statistical methods to select variants and estimate their effect sizes beta for use in the PRS. BridgePRS, like many other PRS methods, require genotype and phenotype data from individuals (several hundred samples) in addition to GWAS summary statistics to estimate the PRS. The predictive power of PRS is assessed in genotype and phenotype data from unseen samples. BridgePRS reports PRS accuracy by the residual variance explained \\(R^2\\) (accounting for the variance explained by the non-genetic covariates included in the model). For binary traits Nagelkerke \\(R^2\\) is used. Cross Population Analysis The PRS Portability Problem Often when a PRS trained using data from one population, e.g. European, is applied to a population of different ancestry, e.g. African, the PRS model is less predictive. Often there is insufficient data in the non-European populations to estimate good ancestry specific PRS using this data alone. Using single ancestry PRS methods researchers are left with two choices: An underpowered PRS model estimated using only data the target non-European population. A PRS estimated using a well powered GWAS from another population The BridgePRS Solution BridgePRS solves this problem by combining GWAS summary statistics from two populations, typically a large well powered GWAS from a \"base\" population, e.g. European, and a smaller GWAS from the target population, eg African. This is implemented by estimating a PRS in the target population sing a prior effect-size distribution estimated from the base GWAS summary statistics. To capture ancestry specific effects in the target population a BridgePRS also estimates a PRS using only the target population. BridgePRS combines these models to produce a single weighted PRS solution.","title":"Background"},{"location":"guide_background/#background","text":"PRS require as input summary statistics from genome wide association studies. If you are unfamiliar with GWAS or need a refresher consider reading this paper . Genome wide association studies (GWAS) involve analyzing the genomes of a larger group of individuals. This involves looking screening millions of genetic variants (SNP) for association with a particular trait. For a binary trait (like blue or brown eyes) this involves comparing the frequency of genetic variations in each group to produce an odds-ratio (measure of association) and a p-value to measure the signficance of the realtionship at each SNP. For continuous measures (like height) this results in an effect size (measure of continuous association) and p-value that measure the significance of our relationship. GWAS results can be summarized in a sumstats file which looks like this: SNP BP REF ALT BETA PV NOTES rs3094315 10523 A G 1.491 0.0029 Positive ( \\(>1\\) ) Trait Association rs3131972 91345 A G 0.817 0.0008 Negative ( \\(<1\\) ) Trait Association rs3131971 23040 T C 1.001 0.5332 Insignificant ( \\(PV>0.05\\) ) Association PRS basics Creating individual polygenic scores involves combine information across many genetic variants. A score is calculated by summing the genetic association values (beta-weights) for each allele in an individual, therefore, variants with stronger associations have a larger impact on the overall score. PRS software use different statistical methods to select variants and estimate their effect sizes beta for use in the PRS. BridgePRS, like many other PRS methods, require genotype and phenotype data from individuals (several hundred samples) in addition to GWAS summary statistics to estimate the PRS. The predictive power of PRS is assessed in genotype and phenotype data from unseen samples. BridgePRS reports PRS accuracy by the residual variance explained \\(R^2\\) (accounting for the variance explained by the non-genetic covariates included in the model). For binary traits Nagelkerke \\(R^2\\) is used.","title":"Background"},{"location":"guide_background/#cross-population-analysis","text":"The PRS Portability Problem Often when a PRS trained using data from one population, e.g. European, is applied to a population of different ancestry, e.g. African, the PRS model is less predictive. Often there is insufficient data in the non-European populations to estimate good ancestry specific PRS using this data alone. Using single ancestry PRS methods researchers are left with two choices: An underpowered PRS model estimated using only data the target non-European population. A PRS estimated using a well powered GWAS from another population The BridgePRS Solution BridgePRS solves this problem by combining GWAS summary statistics from two populations, typically a large well powered GWAS from a \"base\" population, e.g. European, and a smaller GWAS from the target population, eg African. This is implemented by estimating a PRS in the target population sing a prior effect-size distribution estimated from the base GWAS summary statistics. To capture ancestry specific effects in the target population a BridgePRS also estimates a PRS using only the target population. BridgePRS combines these models to produce a single weighted PRS solution.","title":"Cross Population Analysis"},{"location":"guide_customization/","text":"Input Data LD Reference Data: Custom Data BridgePRS estimates SNP-specific LD in the clumping step from multi-population target data in PLINK binary format. BridgePRS includes sample thousand genome data ( BRIDGEDIR/data/kg_sample ) for super-groups (AFR and EUR). A full dataset and corresponding population-id lists ( AFR.ids.txt , EUR.ids.txt , EAS.ids.txt , SAS.ids.txt ) can be downloaded here and unzipped into BRIDGEDIR/data/kg_ref to enable full use of BridgePRS for the above populations (AFR, EUR, EAS, SAS). To pass user supplied LD reference data, for a custom population named POP , please create folder (named pop_ld ) which includes: A .bed , .bim , and .fam file for each chromosome with format \"chr\"[1-22]\".ext\" POP.ids.txt , a txt file that lists all the sample IDs for your population Then use the command line argument --ld_path to point to the location of this folder on your computer.","title":"Customization"},{"location":"guide_customization/#input-data","text":"","title":"Input Data"},{"location":"guide_customization/#ld-reference-data-custom-data","text":"BridgePRS estimates SNP-specific LD in the clumping step from multi-population target data in PLINK binary format. BridgePRS includes sample thousand genome data ( BRIDGEDIR/data/kg_sample ) for super-groups (AFR and EUR). A full dataset and corresponding population-id lists ( AFR.ids.txt , EUR.ids.txt , EAS.ids.txt , SAS.ids.txt ) can be downloaded here and unzipped into BRIDGEDIR/data/kg_ref to enable full use of BridgePRS for the above populations (AFR, EUR, EAS, SAS). To pass user supplied LD reference data, for a custom population named POP , please create folder (named pop_ld ) which includes: A .bed , .bim , and .fam file for each chromosome with format \"chr\"[1-22]\".ext\" POP.ids.txt , a txt file that lists all the sample IDs for your population Then use the command line argument --ld_path to point to the location of this folder on your computer.","title":"LD Reference Data: Custom Data"},{"location":"guide_input/","text":"Input Data LD Reference Data: 1000 Genomes BridgePRS requires genotype data in PLINK binary format from samples representative of the base and target populations to estimate LD. Folders containing the 1000 Genomes LD reference panel for AFR , EUR , EAS , SAS , and AMR populations can be downloaded here and unzipped into BRIDGEDIR/data/1000G_ref . Three folders with differeent SNP sets are available: (1) HapMap variants, (2) all 1000G variants with MAF>5% in any of the five 1000G super-populations and (3) all 1000G variants with MAF>1% in any of the five 1000G super-population To run BridgePRS using a custom LD reference please see customization . As part of the toy data the BridgePRS download includes a sample LD reference panel ( BRIDGEDIR/data/1000G_sample ) for population super-groups AFR and EUR with a small subset of SNPs, see quick start tutorial . Target/Base Population Data: For the target and base populations bridgePRS requires that following files be supplied on the command line or in a configuation file: Name Command Line flag Target Default Base Default Description Pop Name --pop None (Required) Required Target/Base Population Name LD-Ref Pop --ld_pop Pop Name Pop Name LD Ref Pop (AFR,EUR,EAS,AMR,SAS) Sumstats --sumstats_prefix None (Required) Required GWAS Summary Stats (Text Format) Genotypes --genotype_prefix None (Required) Target Genotypes Individual Level Genotypes (Plink Format) Phenotype File --phenotype_file None (Required) Target Phenotypes Individual Level Phenotypes (Text File) Validation File --validation_file Half of Phenotype File None Individual Level Phenotypes for Validation QC-snp List --snp_file All Snps All Snps List QCed SNP ids Creating a Configuration File The following command will validate the command line data and create a target configuration file ./bridgePRS check pop -o out --pop AFR --sumstats_prefix data/pop_africa/sumstats/afr.chr --genotype_prefix data/pop_africa/genotypes/afr_genotypes --phenotype_file data/pop_africa/phenotypes/afr_test.dat To create a target and base configuation file you can use the following command: ./bridgePRS check pops -o out --pop AFR EUR --sumstats_prefix data/pop_africa/sumstats/afr.chr data/pop_europe/sumstats/eur.chr --genotype_prefix data/pop_africa/genotypes/afr_genotypes --phenotype_file data/pop_africa/phenotypes/afr_pheno.dat This command will create target and base configuration files that can be observed below: cat out/save/target.AFR.config POP = AFR LDPOP = AFR SUMSTATS_PREFIX =$ BRIDGEDIR / data / pop_africa / sumstats / afr.chr SUMSTATS_SUFFIX = .glm.linear.gz SNP_FILE =$ BRIDGEDIR / out / save / snps.AFR.txt GENOTYPE_PREFIX =$ BRIDGEDIR / data / pop_africa / genotypes / afr_genotypes PHENOTYPE_FILE =$ BRIDGEDIR / out / save / AFR.test_phenos.dat VALIDATION_FILE =$ BRIDGEDIR / out / save / AFR.valid_phenos.dat cat out/save/base.EUR.config POP = EUR LDPOP = EUR SUMSTATS_PREFIX =$ BRIDGEDIR / data / pop_europe / sumstats / eur.chr SUMSTATS_SUFFIX = .glm.linear.gz SNP_FILE = out / save / snps.EUR.txt GENOTYPE_PREFIX =$ BRIDGEDIR / data / pop_africa / genotypes / afr_genotypes PHENOTYPE_FILE =$ BRIDGEDIR / data / pop_africa / phenotypes / afr_pheno.dat File Specifications 1) Sumstats Data GWAS summary statistics are provided using a prefix to one or many (per chromosome) files with the --sumstats_prefix argument and the --sumstats_suffix argument when nevecessary. GWAS summary statistics must be provided as a whitespace delimited file containing the results of an association study for a given phenotype. BridgePRS has no problem reading in a gzipped base file (need to have a .gz suffix) or splitting the file by chromosome if necessary. An example of a sumstats file with default column headers is shown: Default Headers #CHR ID REF A1 A1_FREQ OBS_CT BETA SE T_STAT P ERRCODE Argument --ssf-snpid --ssf-ref --ssf-alt --ssf-maf --sdf-n --ssf-beta --ssf-se --ssf-p . Data 1 rs12184325 T G 0.0257573 4853 0.820864 0.413692 1.98424 0.0472871 . Data 1 rs4970382 C A 0.483495 4847 0.0011142 0.128347 0.00868116 0.993074 . Data 1 rs2710890 G G 0.424387 4814 0.108094 0.132225 0.817497 0.413687 . The --ssf arguments can be used to specify column headers for different files. 2) Genotype Files Genotype files must be in Plink Format. 3) Phenotype Files Phenotype files can be provided to BridgePRS using the --phenotype_files flag. This must be a tab / space delimited file and missing data must be represented by either NA or -9 (only for binary traits). The first two column of the phenotype file should be the FID and the IID, and the rest can be phenotypes/covariates: FID IID y y.binary PC1 PC2 afr1_1 afr2_1 24.4 1 0.53 0.950 afr1_2 afr2_2 4.10 0 0.59 0.450 afr1_3 afr2_3 37.2 1 0.73 -0.13 afr1_4 afr2_4 5.40 0 0.44 -0.55 The phenotype of interest can be specified with the --phenotype flag and the covariates can be given as a comma separated list after the --covariates flag: ``` ./bridgePRS check data -o out --pop AFR --phenotype y --covariates PC1,PC2 --phenotype_file data/pop_africa/phenotypes/afr_pheno.dat ``` Warning The column name(s) should not contain space nor comma 4) QC SNP List To select only SNPS that have passed QC, you can include a single column text file using the --snp_file flag.","title":"Input Data"},{"location":"guide_input/#input-data","text":"","title":"Input Data"},{"location":"guide_input/#ld-reference-data-1000-genomes","text":"BridgePRS requires genotype data in PLINK binary format from samples representative of the base and target populations to estimate LD. Folders containing the 1000 Genomes LD reference panel for AFR , EUR , EAS , SAS , and AMR populations can be downloaded here and unzipped into BRIDGEDIR/data/1000G_ref . Three folders with differeent SNP sets are available: (1) HapMap variants, (2) all 1000G variants with MAF>5% in any of the five 1000G super-populations and (3) all 1000G variants with MAF>1% in any of the five 1000G super-population To run BridgePRS using a custom LD reference please see customization . As part of the toy data the BridgePRS download includes a sample LD reference panel ( BRIDGEDIR/data/1000G_sample ) for population super-groups AFR and EUR with a small subset of SNPs, see quick start tutorial .","title":"LD Reference Data: 1000 Genomes"},{"location":"guide_input/#targetbase-population-data","text":"For the target and base populations bridgePRS requires that following files be supplied on the command line or in a configuation file: Name Command Line flag Target Default Base Default Description Pop Name --pop None (Required) Required Target/Base Population Name LD-Ref Pop --ld_pop Pop Name Pop Name LD Ref Pop (AFR,EUR,EAS,AMR,SAS) Sumstats --sumstats_prefix None (Required) Required GWAS Summary Stats (Text Format) Genotypes --genotype_prefix None (Required) Target Genotypes Individual Level Genotypes (Plink Format) Phenotype File --phenotype_file None (Required) Target Phenotypes Individual Level Phenotypes (Text File) Validation File --validation_file Half of Phenotype File None Individual Level Phenotypes for Validation QC-snp List --snp_file All Snps All Snps List QCed SNP ids Creating a Configuration File The following command will validate the command line data and create a target configuration file ./bridgePRS check pop -o out --pop AFR --sumstats_prefix data/pop_africa/sumstats/afr.chr --genotype_prefix data/pop_africa/genotypes/afr_genotypes --phenotype_file data/pop_africa/phenotypes/afr_test.dat To create a target and base configuation file you can use the following command: ./bridgePRS check pops -o out --pop AFR EUR --sumstats_prefix data/pop_africa/sumstats/afr.chr data/pop_europe/sumstats/eur.chr --genotype_prefix data/pop_africa/genotypes/afr_genotypes --phenotype_file data/pop_africa/phenotypes/afr_pheno.dat This command will create target and base configuration files that can be observed below: cat out/save/target.AFR.config POP = AFR LDPOP = AFR SUMSTATS_PREFIX =$ BRIDGEDIR / data / pop_africa / sumstats / afr.chr SUMSTATS_SUFFIX = .glm.linear.gz SNP_FILE =$ BRIDGEDIR / out / save / snps.AFR.txt GENOTYPE_PREFIX =$ BRIDGEDIR / data / pop_africa / genotypes / afr_genotypes PHENOTYPE_FILE =$ BRIDGEDIR / out / save / AFR.test_phenos.dat VALIDATION_FILE =$ BRIDGEDIR / out / save / AFR.valid_phenos.dat cat out/save/base.EUR.config POP = EUR LDPOP = EUR SUMSTATS_PREFIX =$ BRIDGEDIR / data / pop_europe / sumstats / eur.chr SUMSTATS_SUFFIX = .glm.linear.gz SNP_FILE = out / save / snps.EUR.txt GENOTYPE_PREFIX =$ BRIDGEDIR / data / pop_africa / genotypes / afr_genotypes PHENOTYPE_FILE =$ BRIDGEDIR / data / pop_africa / phenotypes / afr_pheno.dat","title":"Target/Base Population Data:"},{"location":"guide_input/#file-specifications","text":"","title":"File Specifications"},{"location":"guide_input/#1-sumstats-data","text":"GWAS summary statistics are provided using a prefix to one or many (per chromosome) files with the --sumstats_prefix argument and the --sumstats_suffix argument when nevecessary. GWAS summary statistics must be provided as a whitespace delimited file containing the results of an association study for a given phenotype. BridgePRS has no problem reading in a gzipped base file (need to have a .gz suffix) or splitting the file by chromosome if necessary. An example of a sumstats file with default column headers is shown: Default Headers #CHR ID REF A1 A1_FREQ OBS_CT BETA SE T_STAT P ERRCODE Argument --ssf-snpid --ssf-ref --ssf-alt --ssf-maf --sdf-n --ssf-beta --ssf-se --ssf-p . Data 1 rs12184325 T G 0.0257573 4853 0.820864 0.413692 1.98424 0.0472871 . Data 1 rs4970382 C A 0.483495 4847 0.0011142 0.128347 0.00868116 0.993074 . Data 1 rs2710890 G G 0.424387 4814 0.108094 0.132225 0.817497 0.413687 . The --ssf arguments can be used to specify column headers for different files.","title":"1) Sumstats Data"},{"location":"guide_input/#2-genotype-files","text":"Genotype files must be in Plink Format.","title":"2) Genotype Files"},{"location":"guide_input/#3-phenotype-files","text":"Phenotype files can be provided to BridgePRS using the --phenotype_files flag. This must be a tab / space delimited file and missing data must be represented by either NA or -9 (only for binary traits). The first two column of the phenotype file should be the FID and the IID, and the rest can be phenotypes/covariates: FID IID y y.binary PC1 PC2 afr1_1 afr2_1 24.4 1 0.53 0.950 afr1_2 afr2_2 4.10 0 0.59 0.450 afr1_3 afr2_3 37.2 1 0.73 -0.13 afr1_4 afr2_4 5.40 0 0.44 -0.55 The phenotype of interest can be specified with the --phenotype flag and the covariates can be given as a comma separated list after the --covariates flag: ``` ./bridgePRS check data -o out --pop AFR --phenotype y --covariates PC1,PC2 --phenotype_file data/pop_africa/phenotypes/afr_pheno.dat ``` Warning The column name(s) should not contain space nor comma","title":"3) Phenotype Files"},{"location":"guide_input/#4-qc-snp-list","text":"To select only SNPS that have passed QC, you can include a single column text file using the --snp_file flag.","title":"4) QC SNP List"},{"location":"guide_output/","text":"Output Data For every PRS invocation of BridgePRS (single, port, and prior) BridgePRS produces the following output files. Weighted combined versions of each files of also produced by BridgePRS. Name file extension Brief Description SNP Weights .snp_weights.dat Snp weights PRS Values .preds.dat Predicted Phenotypes Summary Result .var_explained.txt Performance Summary Progress Plot bridgePRS-{subProgram}.png Performance Summary","title":"Output Data"},{"location":"guide_output/#output-data","text":"For every PRS invocation of BridgePRS (single, port, and prior) BridgePRS produces the following output files. Weighted combined versions of each files of also produced by BridgePRS. Name file extension Brief Description SNP Weights .snp_weights.dat Snp weights PRS Values .preds.dat Predicted Phenotypes Summary Result .var_explained.txt Performance Summary Progress Plot bridgePRS-{subProgram}.png Performance Summary","title":"Output Data"},{"location":"guide_pipeline/","text":"Main Program The BridgePRS Pipeline can be invoked with the following command: BridgePRS easyrun go The pipeline requires the following input from both the target and base populations: --pop: The population name --ldpop: The ld reference population, if different from population name --sumstats_prefix: Sumstats data --genotype_prefix: Target Genotype Data --phenotype_file: Target Phenotype File This information can be provided on the command line or using config files. The pipeline runs multiple subprograms that are described below. Subprograms BridgePRS consists of five related multi-function subprograms: 1) BridgePRS prs-single 2) BridgePRS build-model 3) BridgePRS prs-port 4) BridgePRS prs-prior 5) BridgePRS analyze combine Subprogram Input Subcommands Output prs-single Target Pop Data run ,clump,beta,predict,quantify prs-result build-model Model Pop Data **run**clump,beta,predict,prior model-params prs-port Target Pop + Model Result run ,predict,quantify prs-port-result prs-prior Target Pop Data + Model Result run ,clump,beta,test,predict prs-prior-result analyze PRS Result Files **run**result,combine single-plot,weighted prs-result,weighted prs plot These programs can be called consecutively using the easyrun master-program which will create the following directory structure: prs-single The subprogram ( prs-single ) and subcommand ( run ) ( ./bridgePRS prs-single run ) requires that the following target population data be provided on the command line or inside of a configuration file: --pop: The name of your target population --ldpop: The ld reference name, if different from target population name --sumstats_prefix: Sumstats data --genotype_prefix: Target Genotype Data --phenotype_file: Target Phenotype File This subprogram performs single population RidgePRS . build-model The subprogram is run on the base population (where the GWAS is larger). --pop: The name of your base population --ldpop: The ld reference name, if different from base population name --sumstats_prefix: Base sumstats data --genotype_prefix: Base Genotype Data (If available) --phenotype_file: Base Phenotype File (If available) This program performs RidgePRS on the base population and then provides a prior distribution for each SNP weight that can be passed onto the next programs. prs-port The subprogram uses the model result and the target population data to \"port\" the SNP weights from the base population to make estimates in the target population. prs-prior The subprogram uses the model result and the target population data and uses the the SNP weights from the base population to estimate a prior distribution to make estimates in the target population. analyze The analyze subprogram is used to either make a plot from a single result (above) or to combine the results of all three.","title":"Pipeline"},{"location":"guide_pipeline/#main-program","text":"The BridgePRS Pipeline can be invoked with the following command: BridgePRS easyrun go The pipeline requires the following input from both the target and base populations: --pop: The population name --ldpop: The ld reference population, if different from population name --sumstats_prefix: Sumstats data --genotype_prefix: Target Genotype Data --phenotype_file: Target Phenotype File This information can be provided on the command line or using config files. The pipeline runs multiple subprograms that are described below.","title":"Main Program"},{"location":"guide_pipeline/#subprograms","text":"BridgePRS consists of five related multi-function subprograms: 1) BridgePRS prs-single 2) BridgePRS build-model 3) BridgePRS prs-port 4) BridgePRS prs-prior 5) BridgePRS analyze combine Subprogram Input Subcommands Output prs-single Target Pop Data run ,clump,beta,predict,quantify prs-result build-model Model Pop Data **run**clump,beta,predict,prior model-params prs-port Target Pop + Model Result run ,predict,quantify prs-port-result prs-prior Target Pop Data + Model Result run ,clump,beta,test,predict prs-prior-result analyze PRS Result Files **run**result,combine single-plot,weighted prs-result,weighted prs plot These programs can be called consecutively using the easyrun master-program which will create the following directory structure:","title":"Subprograms"},{"location":"guide_pipeline/#prs-single","text":"The subprogram ( prs-single ) and subcommand ( run ) ( ./bridgePRS prs-single run ) requires that the following target population data be provided on the command line or inside of a configuration file: --pop: The name of your target population --ldpop: The ld reference name, if different from target population name --sumstats_prefix: Sumstats data --genotype_prefix: Target Genotype Data --phenotype_file: Target Phenotype File This subprogram performs single population RidgePRS .","title":"prs-single"},{"location":"guide_pipeline/#build-model","text":"The subprogram is run on the base population (where the GWAS is larger). --pop: The name of your base population --ldpop: The ld reference name, if different from base population name --sumstats_prefix: Base sumstats data --genotype_prefix: Base Genotype Data (If available) --phenotype_file: Base Phenotype File (If available) This program performs RidgePRS on the base population and then provides a prior distribution for each SNP weight that can be passed onto the next programs.","title":"build-model"},{"location":"guide_pipeline/#prs-port","text":"The subprogram uses the model result and the target population data to \"port\" the SNP weights from the base population to make estimates in the target population.","title":"prs-port"},{"location":"guide_pipeline/#prs-prior","text":"The subprogram uses the model result and the target population data and uses the the SNP weights from the base population to estimate a prior distribution to make estimates in the target population.","title":"prs-prior"},{"location":"guide_pipeline/#analyze","text":"The analyze subprogram is used to either make a plot from a single result (above) or to combine the results of all three.","title":"analyze"},{"location":"guide_shell/","text":"Using BridgePRS without Python See","title":"Using Bash"},{"location":"guide_shell/#using-bridgeprs-without-python","text":"See","title":"Using BridgePRS without Python"},{"location":"guide_usecases/","text":"Training In the two toy-data examples the target population was African ( AFR ) and the base population was European ( EUR ). In these examples each population had a corresponding: LD Reference Panel GWAS Summary Stat File Individual levels genotype data in plink format Phenotype data Here we consider using BridgePRS in other scenarios with less available data. In each of these challeges the task is to create valid configuration files given the described scenario. Challenge 1: I have access to genotype/phenotype data (<1000 samples, continuous phenotype) from a diverse population in Central Africa (1,2). I would like ot run PRS as accurately as possible, but my dataset is not large enough to conduct GWAS, however, I do have access to a moderately sized GWAS in a related West African population (3) and access to large-scale GWAS data from a European population (4). I also have access to the 1000G reference panels, how can I analyze my data? Available Data: caf/genotypes/caf_genotype.bed, caf_genotype.bim, caf_genotype.fam caf/phenotypes/caf_test.dat, ukb/phenotypes/caf_validation.dat yoruba/sumstats/yoruba.chr1.glm.gz,...,yoruba.chr22.glm.gz ukb/sumstats/ukb.sumstats.gz 1000G Reference Panel Can you fill out the configuration files to carry this out? Target Config File POP = LDPOP = SUMSTATS_PREFIX = GENOTYPE_PREFIX = PHENOTYPE_FILE = VALIDATION_FILE = [Answer] POP = CAF LDPOP = AFR SUMSTATS_PREFIX = yoruba / sumstats / yoruba.chr SUMSTATS_SUFFIX = .glm.gz GENOTYPE_PREFIX = caf / genotypes / caf_genotype PHENOTYPE_FILE = caf / phenotypes / caf_test.dat VALIDATION_FILE = caf / phenotypes / caf_validation.dat Model Config FIle POP = LDPOP = SUMSTATS_PREFIX = GENOTYPE_PREFIX = PHENOTYPE_FILES = Answer POP = EUR LDPOP = EUR SUMSTATS_PREFIX = ukb / sumstats / ukb.sumstats GENOTYPE_PREFIX = caf / genotypes / caf_genotype PHENOTYPE_FILE = caf / phenotypes / caf_test.dat VALIDATION_FILE = caf / phenotypes / caf_validation.dat Challenge 2: **I have access to GWAS data (1) and genotype/phenotype (2,3) data (>2000 samples, binary phenotype) from a moderate sized population in Eastern Europe. I have reason to believe that this population has unique LD structure and would like to incorporate this into my model. I also have GWAS (4) and genotype/phenotype data from the UKB biobank (5,6) that I wish to use to improve my results, how should I do this? ukr/sumstats/ukr.sumstats.out ukr/genotypes/chr1.bed,bim,fam...chr22.bed,bin,fam, ukr/phenotypes/ukr_test.dat, ukr/phenotypes/ukr_validation.dat ukb/sumstats/ukb.sumstats.gz ukb/genotypes/chr1.bed,bim,fam...chr22.bed,bin,fam ukb/phenotypes/ukb_test.dat, ukb/phenotypes/ukb_validation.dat Target Config File POP = LDPOP = SUMSTATS_PREFIX = GENOTYPE_PREFIX = PHENOTYPE_FILE = VALIDATION_FILE = [Answer] POP = ukr LDPOP = ukr * SUMSTATS_PREFIX = ukr / sumstats / ukr.sumstats GENOTYPE_PREFIX = ukr / phenotypes / chr PHENOTYPE_FILE = ukr / phenotypes / ukr_test.dat VALIDATION_FILE = ukr / phenotypes / ukr_validation.dat Model Config FIle POP = LDPOP = SUMSTATS_PREFIX = GENOTYPE_PREFIX = PHENOTYPE_FILE = VALIDATION_FILE = Answer POP = UKB LDPOP = EUR SUMSTATS_PREFIX = ukb / sumstats / ukb.sumstats GENOTYPE_PREFIX = ukb / genotypes / chr PHENOTYPE_FILE = ukb / phenotypes / ukb_test.dat VALIDATION_FILE = ukb / phenotypes / ukb_validation.dat","title":"Use Cases"},{"location":"guide_usecases/#training","text":"In the two toy-data examples the target population was African ( AFR ) and the base population was European ( EUR ). In these examples each population had a corresponding: LD Reference Panel GWAS Summary Stat File Individual levels genotype data in plink format Phenotype data Here we consider using BridgePRS in other scenarios with less available data. In each of these challeges the task is to create valid configuration files given the described scenario.","title":"Training"},{"location":"guide_usecases/#challenge-1","text":"I have access to genotype/phenotype data (<1000 samples, continuous phenotype) from a diverse population in Central Africa (1,2). I would like ot run PRS as accurately as possible, but my dataset is not large enough to conduct GWAS, however, I do have access to a moderately sized GWAS in a related West African population (3) and access to large-scale GWAS data from a European population (4). I also have access to the 1000G reference panels, how can I analyze my data? Available Data: caf/genotypes/caf_genotype.bed, caf_genotype.bim, caf_genotype.fam caf/phenotypes/caf_test.dat, ukb/phenotypes/caf_validation.dat yoruba/sumstats/yoruba.chr1.glm.gz,...,yoruba.chr22.glm.gz ukb/sumstats/ukb.sumstats.gz 1000G Reference Panel Can you fill out the configuration files to carry this out? Target Config File POP = LDPOP = SUMSTATS_PREFIX = GENOTYPE_PREFIX = PHENOTYPE_FILE = VALIDATION_FILE = [Answer] POP = CAF LDPOP = AFR SUMSTATS_PREFIX = yoruba / sumstats / yoruba.chr SUMSTATS_SUFFIX = .glm.gz GENOTYPE_PREFIX = caf / genotypes / caf_genotype PHENOTYPE_FILE = caf / phenotypes / caf_test.dat VALIDATION_FILE = caf / phenotypes / caf_validation.dat Model Config FIle POP = LDPOP = SUMSTATS_PREFIX = GENOTYPE_PREFIX = PHENOTYPE_FILES = Answer POP = EUR LDPOP = EUR SUMSTATS_PREFIX = ukb / sumstats / ukb.sumstats GENOTYPE_PREFIX = caf / genotypes / caf_genotype PHENOTYPE_FILE = caf / phenotypes / caf_test.dat VALIDATION_FILE = caf / phenotypes / caf_validation.dat","title":"Challenge 1:"},{"location":"guide_usecases/#challenge-2","text":"**I have access to GWAS data (1) and genotype/phenotype (2,3) data (>2000 samples, binary phenotype) from a moderate sized population in Eastern Europe. I have reason to believe that this population has unique LD structure and would like to incorporate this into my model. I also have GWAS (4) and genotype/phenotype data from the UKB biobank (5,6) that I wish to use to improve my results, how should I do this? ukr/sumstats/ukr.sumstats.out ukr/genotypes/chr1.bed,bim,fam...chr22.bed,bin,fam, ukr/phenotypes/ukr_test.dat, ukr/phenotypes/ukr_validation.dat ukb/sumstats/ukb.sumstats.gz ukb/genotypes/chr1.bed,bim,fam...chr22.bed,bin,fam ukb/phenotypes/ukb_test.dat, ukb/phenotypes/ukb_validation.dat Target Config File POP = LDPOP = SUMSTATS_PREFIX = GENOTYPE_PREFIX = PHENOTYPE_FILE = VALIDATION_FILE = [Answer] POP = ukr LDPOP = ukr * SUMSTATS_PREFIX = ukr / sumstats / ukr.sumstats GENOTYPE_PREFIX = ukr / phenotypes / chr PHENOTYPE_FILE = ukr / phenotypes / ukr_test.dat VALIDATION_FILE = ukr / phenotypes / ukr_validation.dat Model Config FIle POP = LDPOP = SUMSTATS_PREFIX = GENOTYPE_PREFIX = PHENOTYPE_FILE = VALIDATION_FILE = Answer POP = UKB LDPOP = EUR SUMSTATS_PREFIX = ukb / sumstats / ukb.sumstats GENOTYPE_PREFIX = ukb / genotypes / chr PHENOTYPE_FILE = ukb / phenotypes / ukb_test.dat VALIDATION_FILE = ukb / phenotypes / ukb_validation.dat","title":"Challenge 2:"},{"location":"misc_faq/","text":"Frequently Asked Questions We will continue to update this list to address the more common questions. I've receive the following error message, what should I do? No permission You must fix permission.","title":"Frequently Asked Questions"},{"location":"misc_faq/#frequently-asked-questions","text":"We will continue to update this list to address the more common questions. I've receive the following error message, what should I do? No permission You must fix permission.","title":"Frequently Asked Questions"},{"location":"misc_log/","text":"Update Log 2023-08-15 v0.1.7 Added Sample Thousand Genomes Data. 2023-08-05 v0.1.7 Identified and fixed a bug for binary traits.","title":"Update Log"},{"location":"misc_log/#update-log","text":"","title":"Update Log"},{"location":"misc_log/#2023-08-15-v017","text":"Added Sample Thousand Genomes Data.","title":"2023-08-15 v0.1.7"},{"location":"misc_log/#2023-08-05-v017","text":"Identified and fixed a bug for binary traits.","title":"2023-08-05 v0.1.7"},{"location":"quikstart_data/","text":"Toy Data Toy data reflecting African and European populations are located in the directories data/pop_africa/ and data/pop_europe/ . Each directory contains (1) GWAS summary stats file(s), (2) genotype file(s) (plink format), and (3) phenotype file(s) (txt format), as well as a population config file that lists the path to each file. For more information on file type requirements or how to create population configuration files for your own data, see Guide: Input Data . To run the demo tutorial go to the next page.","title":"Toy Data"},{"location":"quikstart_data/#toy-data","text":"Toy data reflecting African and European populations are located in the directories data/pop_africa/ and data/pop_europe/ . Each directory contains (1) GWAS summary stats file(s), (2) genotype file(s) (plink format), and (3) phenotype file(s) (txt format), as well as a population config file that lists the path to each file. For more information on file type requirements or how to create population configuration files for your own data, see Guide: Input Data . To run the demo tutorial go to the next page.","title":"Toy Data"},{"location":"quikstart_demo/","text":"Input Data This demo runs using the following population config files data/pop_africa/afr.config and data/pop_europe/eur.config that list the paths for all required population data. Run The Demo: To run BridgePRS using a continuous phenotype: Easyrun Command: Continuous Trait (y) Run BridgePRS on the toy phenotype \"y\" with the following command: ./bridgePRS easyrun go -o out1 --config_files data/afr.config data/eur.config --phenotype y And verify that a summary figure out1/bridgeSummary.png shown below is created. Then repeat the process using a binary phenotype: Easyrun Command Run BridgePRS on the toy binary phenotype \"y.binary\" with the following command: ./bridgePRS easyrun go -o out2 --config_files data/afr.config data/eur.config --phenotype y.binary Demo Results: If BridgePRS runs successfully on the toy data, please go to the next page for information on interpretation of the results. Before running BridgePRS with larger real data, please consider reading our most common use case examples to understand how best to use BridgePRS in realistic scenarios.","title":"Demo"},{"location":"quikstart_demo/#input-data","text":"This demo runs using the following population config files data/pop_africa/afr.config and data/pop_europe/eur.config that list the paths for all required population data.","title":"Input Data"},{"location":"quikstart_demo/#run-the-demo","text":"To run BridgePRS using a continuous phenotype: Easyrun Command: Continuous Trait (y) Run BridgePRS on the toy phenotype \"y\" with the following command: ./bridgePRS easyrun go -o out1 --config_files data/afr.config data/eur.config --phenotype y And verify that a summary figure out1/bridgeSummary.png shown below is created. Then repeat the process using a binary phenotype: Easyrun Command Run BridgePRS on the toy binary phenotype \"y.binary\" with the following command: ./bridgePRS easyrun go -o out2 --config_files data/afr.config data/eur.config --phenotype y.binary","title":"Run The Demo:"},{"location":"quikstart_demo/#demo-results","text":"If BridgePRS runs successfully on the toy data, please go to the next page for information on interpretation of the results. Before running BridgePRS with larger real data, please consider reading our most common use case examples to understand how best to use BridgePRS in realistic scenarios.","title":"Demo Results:"},{"location":"quikstart_result/","text":"Interpreting results The easyrun command used in the previous step runs the following subprograms : prs-single (stage 1): Applied to the base population (Eur). Used to define prior for target population PRS. prs-prior (stage 2): Applied to the target population (AFR) PRS using prior estimated from base population (Eur). prs-single (stage 1): Applied to the target population (Afr). PRS estimated using target population data only. analyse Combine Afr stage 1 and 2 results to produce a weighted target PRS result. prs-port: Base population PRS applied to target population. And produces output in the following five subdirectories: prs-single_AFR/quantify/: Weights, predictions, and performance metrics. model_EUR/prior: Model weights and priors. prs-port_AFR/quantify/: Weights, predictions, and performance metrics. prs-prior_AFR/quantify/: Weights, predictions, and performance metrics. prs-combined_AFR/: Analysis that combined the previous four steps.","title":"Results"},{"location":"quikstart_result/#interpreting-results","text":"The easyrun command used in the previous step runs the following subprograms : prs-single (stage 1): Applied to the base population (Eur). Used to define prior for target population PRS. prs-prior (stage 2): Applied to the target population (AFR) PRS using prior estimated from base population (Eur). prs-single (stage 1): Applied to the target population (Afr). PRS estimated using target population data only. analyse Combine Afr stage 1 and 2 results to produce a weighted target PRS result. prs-port: Base population PRS applied to target population. And produces output in the following five subdirectories: prs-single_AFR/quantify/: Weights, predictions, and performance metrics. model_EUR/prior: Model weights and priors. prs-port_AFR/quantify/: Weights, predictions, and performance metrics. prs-prior_AFR/quantify/: Weights, predictions, and performance metrics. prs-combined_AFR/: Analysis that combined the previous four steps.","title":"Interpreting results"},{"location":"req_mac/","text":"Plink: Developer Cannot Be Verified If you see this error, Do not click: Move To Trash . Instead click on the top right hand corner of the box, or stop running BridgePRS and follow these instructions to give your system permission to call plink from BridgePRS: 1- Default Settings By default macOS allows you to open apps from the official Mac App Store only, If you have this set as your default you can change this if you: Open System Preferences. Go to the Security & Privacy tab. Click on the lock and enter your password. Change settings to include identified developers (see below): 2- Allowing Exceptions Expanding permissions to include \"identified developers\" is required but not sufficient. To obtain further permission to run Plink or any other unapproved program you can: Open System Preferences. Go to Security & Privacy and select the General tab. If this has happened within the hour, this page will give you an override button to open Open Anyway . Enter you password as above and click this button. You will be asked to once more which will create an exception allowing you to run Plink in the future. 3- Downstream BridgePRS Errors If you have moved plink to the trash you will have to recover it, additionally the empty files created by a failed attempt to run Plink can cause problems if BridgePRS tries to recover your progress. Restarting a bridgePRS run You can avoid this problem by manually deleting your output directory and starting over, or by using the restart flag: $./bridgePRS easyrun go -o out1 --pop_configs data/afr.config data/eur.config --phenotype y --restart This will force bridgePRS to restart every subprogram from the beginning.","title":"Mac Specific"},{"location":"req_mac/#plink-developer-cannot-be-verified","text":"If you see this error, Do not click: Move To Trash . Instead click on the top right hand corner of the box, or stop running BridgePRS and follow these instructions to give your system permission to call plink from BridgePRS:","title":"Plink: Developer Cannot Be Verified"},{"location":"req_mac/#1-default-settings","text":"By default macOS allows you to open apps from the official Mac App Store only, If you have this set as your default you can change this if you: Open System Preferences. Go to the Security & Privacy tab. Click on the lock and enter your password. Change settings to include identified developers (see below):","title":"1- Default Settings"},{"location":"req_mac/#2-allowing-exceptions","text":"Expanding permissions to include \"identified developers\" is required but not sufficient. To obtain further permission to run Plink or any other unapproved program you can: Open System Preferences. Go to Security & Privacy and select the General tab. If this has happened within the hour, this page will give you an override button to open Open Anyway . Enter you password as above and click this button. You will be asked to once more which will create an exception allowing you to run Plink in the future.","title":"2- Allowing Exceptions"},{"location":"req_mac/#3-downstream-bridgeprs-errors","text":"If you have moved plink to the trash you will have to recover it, additionally the empty files created by a failed attempt to run Plink can cause problems if BridgePRS tries to recover your progress. Restarting a bridgePRS run You can avoid this problem by manually deleting your output directory and starting over, or by using the restart flag: $./bridgePRS easyrun go -o out1 --pop_configs data/afr.config data/eur.config --phenotype y --restart This will force bridgePRS to restart every subprogram from the beginning.","title":"3- Downstream BridgePRS Errors"},{"location":"req_software/","text":"Requirements BridgePRS depends on R, plink, and runs using a Python3 wrapper. R BridgePRS requires the following R [ version 3.6.3+ ] ( Download ) packages: BEDMatrix, boot, data.table, doMC, glmnet, MASS, optparse, parallel, and R.utils R Packages These packages can be installed from inside an R terminal using the command: $ R install.packages(c(\"BEDMatrix\",\"boot\",\"data.table\",\"doMC\",\"glmnet\",\"MASS\",\"optparse\",\"parallel\",\"R.utils\")) Plink BridgePRS requires a version of plink compatible with your machine. ( download ) By default BridgePRS includes versions of plink for Linux and MacOs and will attempt to locate the correct version. To override this behavior and use a specific version of plink please use the flag --plinkPath $PLINKPATH to direct BridgePRS to the file location. Extra MacOs Security: MacOs often block executables if they are not approved from the app store. You may have to change your settings to allow Plink to be called For instructions on how to do so, please click here . Python The BridgePRS wrapper requires python3+ ( download ) and the matplotlib library ( download ) is required to create plots (options). Bash BridgePRS can also be run using a shell script as described here . BridgePRS check requirements If BridgePRS has been downloaded and made executable (as described previousely ) then the following command can be used to allow bridgePRS to check system compatibility and prompt you to install missing software: ./bridgePRS check requirements BridgePRS Begins at Sat Sep 30 23:45:46 2023 Bridge Command-Line: ../bridgePRS check requirements Checking Requirements: System: platform=linux, cores(available)=8, cores(used)=1 (TIP: Using More Than One Core Will Improve Performace (e.g. ---cores 7)) Plink: found=true, path=/home/tade/Bin/plink R: found=true, path=/usr/bin/R, version=3.6.3 (packages=up to date) Python3: found=true, path=/usr/bin/python3, matplotlib=true Complete","title":"Software"},{"location":"req_software/#requirements","text":"BridgePRS depends on R, plink, and runs using a Python3 wrapper.","title":"Requirements"},{"location":"req_software/#r","text":"BridgePRS requires the following R [ version 3.6.3+ ] ( Download ) packages: BEDMatrix, boot, data.table, doMC, glmnet, MASS, optparse, parallel, and R.utils R Packages These packages can be installed from inside an R terminal using the command: $ R install.packages(c(\"BEDMatrix\",\"boot\",\"data.table\",\"doMC\",\"glmnet\",\"MASS\",\"optparse\",\"parallel\",\"R.utils\"))","title":"R"},{"location":"req_software/#plink","text":"BridgePRS requires a version of plink compatible with your machine. ( download ) By default BridgePRS includes versions of plink for Linux and MacOs and will attempt to locate the correct version. To override this behavior and use a specific version of plink please use the flag --plinkPath $PLINKPATH to direct BridgePRS to the file location. Extra MacOs Security: MacOs often block executables if they are not approved from the app store. You may have to change your settings to allow Plink to be called For instructions on how to do so, please click here .","title":"Plink"},{"location":"req_software/#python","text":"The BridgePRS wrapper requires python3+ ( download ) and the matplotlib library ( download ) is required to create plots (options).","title":"Python"},{"location":"req_software/#bash","text":"BridgePRS can also be run using a shell script as described here . BridgePRS check requirements If BridgePRS has been downloaded and made executable (as described previousely ) then the following command can be used to allow bridgePRS to check system compatibility and prompt you to install missing software: ./bridgePRS check requirements BridgePRS Begins at Sat Sep 30 23:45:46 2023 Bridge Command-Line: ../bridgePRS check requirements Checking Requirements: System: platform=linux, cores(available)=8, cores(used)=1 (TIP: Using More Than One Core Will Improve Performace (e.g. ---cores 7)) Plink: found=true, path=/home/tade/Bin/plink R: found=true, path=/usr/bin/R, version=3.6.3 (packages=up to date) Python3: found=true, path=/usr/bin/python3, matplotlib=true Complete","title":"Bash"},{"location":"req_system/","text":"Preparation After downloading and unzipping BridgePRS a directory with the following contents will be created: bridgePRS <--- program executable data/ <--- input data LICENSE README.me src/ <--- source code tests/ <--- test directory Using the terminal, type the following command from within the directory: chmod +x bridgePRS chmod +x src/Python/Xtra/plink* to make bridgePRS and plink executable Requirements Next, confirm that the required libraries and dependencies are installed and available by following the instructions in Software. Alternatively, you can type: ./bridgePRS check requirements and bridgePRS will check your system and provide further instructions to help you install missing dependencies. Warning: Extra MacOs Security: If you see this msg when running 'check requirements' (or any other time): You will have to change your system settings to allow bridgePRS to call plink. For instructions on how to do so, please click here .","title":"System"},{"location":"req_system/#preparation","text":"After downloading and unzipping BridgePRS a directory with the following contents will be created: bridgePRS <--- program executable data/ <--- input data LICENSE README.me src/ <--- source code tests/ <--- test directory Using the terminal, type the following command from within the directory: chmod +x bridgePRS chmod +x src/Python/Xtra/plink* to make bridgePRS and plink executable","title":"Preparation"},{"location":"req_system/#requirements","text":"Next, confirm that the required libraries and dependencies are installed and available by following the instructions in Software. Alternatively, you can type: ./bridgePRS check requirements and bridgePRS will check your system and provide further instructions to help you install missing dependencies. Warning: Extra MacOs Security: If you see this msg when running 'check requirements' (or any other time): You will have to change your system settings to allow bridgePRS to call plink. For instructions on how to do so, please click here .","title":"Requirements"}]}