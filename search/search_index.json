{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"BridgePRS is a Bayesian method that utilises ridge regression developed to tackle the \" PRS Portability Problem\". The PRS portability problem causes lower PRS accuracy in target populations not included in the GWAS base used to estimate the PRS. This is due to differences in linkage disequilibrium (LD), allele frequency and gene\u2013environment interactions affecting causal effect sizes between the base and target populations. Download Links BridgePRS Software Packages OS Link Last Updated Linux 64-Bit v1.0.3 9-13-2024 Mac 64-Bit v1.0.3 9-10-2024 Windows NA Not Available 1000G genotype data from the five super-populations (AFR, AMR, EAS, EUR, SAS) is provided to estimate LD in BridgePRS analyses for three SNP sets: HapMap Variants, 1000G variants with MAF>5% in any one of the five 1000G super-populations, 1000G variants with MAF>1% in one any of the five 1000G super-populations: |Reference Panels | |--| | Download Link Size More Information HapMap Variants <1GB International HapMap Project 1000 Genomes: MAF>5% 8GB IGSR Website 1000 Genomes: MAF>1% 14GB IGSR Website Trouble Downloading Ref Panels? Latest Updates 2024-11-02 (v0.1.7) Added a direct downloads page for users who have trouble downloading large reference panels. Added sample thousand genomes data. update log can be found here Overview BridgePRS is written in R with a Python wrapper. Plink. is used in the first stage of the modelling for clumping and thresholding (all markers within clumps are retained for analysis). For more information on installing dependencies, please refer to Requirements . To get BridgePRS running using toy data see our Quick Start Tutorial. . Following the Quick Start, the full guide provides more realistic examples to help you get started with your own data. Citation: Our Manuscript is published in Nature Genetics Please cite our paper : Hoggart C, Choi SW, Garc\u00eda-Gonz\u00e1lez J, Souaiaia T, Preuss M, O'Reilly P. BridgePRS leverages shared genetic effects across ancestries to increase polygenic risk score portability. Nat Genet 56, 180\u2013186 (2024). https://doi.org/10.1038/s41588-023-01583-9 Contact For questions about the methodology, this website, or our manuscript please contact Dr Clive Hoggart , Dr Tade Souaiaia , or Dr Paul O'Reilly . For source code and coding issues please visit the bridgePRS github here . Acknowledgements We would like to thank Brian Fulton-Howard for his feedback and help with testing.","title":"Home"},{"location":"#download-links","text":"BridgePRS Software Packages OS Link Last Updated Linux 64-Bit v1.0.3 9-13-2024 Mac 64-Bit v1.0.3 9-10-2024 Windows NA Not Available 1000G genotype data from the five super-populations (AFR, AMR, EAS, EUR, SAS) is provided to estimate LD in BridgePRS analyses for three SNP sets: HapMap Variants, 1000G variants with MAF>5% in any one of the five 1000G super-populations, 1000G variants with MAF>1% in one any of the five 1000G super-populations: |Reference Panels | |--| | Download Link Size More Information HapMap Variants <1GB International HapMap Project 1000 Genomes: MAF>5% 8GB IGSR Website 1000 Genomes: MAF>1% 14GB IGSR Website Trouble Downloading Ref Panels? Latest Updates","title":"Download Links"},{"location":"#2024-11-02-v017","text":"Added a direct downloads page for users who have trouble downloading large reference panels. Added sample thousand genomes data. update log can be found here","title":"2024-11-02 (v0.1.7)"},{"location":"#overview","text":"BridgePRS is written in R with a Python wrapper. Plink. is used in the first stage of the modelling for clumping and thresholding (all markers within clumps are retained for analysis). For more information on installing dependencies, please refer to Requirements . To get BridgePRS running using toy data see our Quick Start Tutorial. . Following the Quick Start, the full guide provides more realistic examples to help you get started with your own data. Citation: Our Manuscript is published in Nature Genetics Please cite our paper : Hoggart C, Choi SW, Garc\u00eda-Gonz\u00e1lez J, Souaiaia T, Preuss M, O'Reilly P. BridgePRS leverages shared genetic effects across ancestries to increase polygenic risk score portability. Nat Genet 56, 180\u2013186 (2024). https://doi.org/10.1038/s41588-023-01583-9","title":"Overview"},{"location":"#contact","text":"For questions about the methodology, this website, or our manuscript please contact Dr Clive Hoggart , Dr Tade Souaiaia , or Dr Paul O'Reilly . For source code and coding issues please visit the bridgePRS github here .","title":"Contact"},{"location":"#acknowledgements","text":"We would like to thank Brian Fulton-Howard for his feedback and help with testing.","title":"Acknowledgements"},{"location":"guide_args/","text":"This page contains all command available in BridgePRS. Tips When constructing new parameters, we follow the following rule: if the command has effect on any file that is not the target, it will have a prefix of the file name. For example, --base-info applies INFO score filtering on the base file, --ld-info perform INFO score filtering on the LD reference file and --info applies the INFO score filtering on the target file. Input Population Files/Arguments --sumstats_prefix Path to sumstats data --sumstats_suffix Sumstats Suffix --phenotype_files phenotype test and validation data --pop_config(s) population configuration file(s) --pop or --pops population names (AFR, EUR, etc) --snp_file List of QCed SNP ids System Level Toggles/Arguments --cores By default bridgePRS is parralelized across (n-1) cores -o Output folder for BridgePRS --platform Force platform (Linux or MacOS) --verbose Toggle Verbose Mode On --noPlots Skip Post-Pipeline Analysis (Plotting) --restart Repeat previously completed steps Parameter Arguments --fst fst between populations analysed, e.g. 0.15 for Africans v Europeans and 0.11 for East Asians v Europeans --strand_check Logical to check whether summary statistics and reference data input files are on the same strand. If true/1 only unambiguous SNPs are used in analyses. If false/0 all variants with matching alleles between studies are used. With both options effect and reference alleles are checked and flipped where necessary. If a matching pair of alleles is not found variants are removed (default 0) --max_clump_size Maximum number SNPs allowed in a clump. Very large clumps, eg more than 1,000 variants, can occur in regions of high LD such as the HLA region when using imputed data and considerably slow the algorithm. Must be used in conjunction with --thinned_snplist , see below --thinned_snplist Thinned snp list to use for clumps that exceed --max_clump_size , list of HapMap variants would be suitable Internal File Arguments --model_file model result generated from the build-model subprogram --clump_prefix prefix for files generated by clump step --beta_prefix prefix for files generated by beta step --predict_prefix prefix for files generated by predict step --result_file prs result files File Column Names Phenotype Files --phenotype Phenotype File Field: phenotype --covariates Phenotype File Field: comma separated list of covariates Sumstats Files --ssf-snpid Sumstats field: snp ID --ssf-ref Sumstats Field: reference allele --ssf-alt Sumstats Field: alt allele --ssf-maf Sumstats Field: MAF --ssf-beta Sumstats Field: linear regression effect or log odds --ssf-se Sumstats field: standard error --ssf-p Sumstats field: P-value --ssf-n Sumstats Field: Sample Size","title":"All Arguments"},{"location":"guide_args/#input-population-filesarguments","text":"--sumstats_prefix Path to sumstats data --sumstats_suffix Sumstats Suffix --phenotype_files phenotype test and validation data --pop_config(s) population configuration file(s) --pop or --pops population names (AFR, EUR, etc) --snp_file List of QCed SNP ids","title":"Input Population Files/Arguments"},{"location":"guide_args/#system-level-togglesarguments","text":"--cores By default bridgePRS is parralelized across (n-1) cores -o Output folder for BridgePRS --platform Force platform (Linux or MacOS) --verbose Toggle Verbose Mode On --noPlots Skip Post-Pipeline Analysis (Plotting) --restart Repeat previously completed steps","title":"System Level Toggles/Arguments"},{"location":"guide_args/#parameter-arguments","text":"--fst fst between populations analysed, e.g. 0.15 for Africans v Europeans and 0.11 for East Asians v Europeans --strand_check Logical to check whether summary statistics and reference data input files are on the same strand. If true/1 only unambiguous SNPs are used in analyses. If false/0 all variants with matching alleles between studies are used. With both options effect and reference alleles are checked and flipped where necessary. If a matching pair of alleles is not found variants are removed (default 0) --max_clump_size Maximum number SNPs allowed in a clump. Very large clumps, eg more than 1,000 variants, can occur in regions of high LD such as the HLA region when using imputed data and considerably slow the algorithm. Must be used in conjunction with --thinned_snplist , see below --thinned_snplist Thinned snp list to use for clumps that exceed --max_clump_size , list of HapMap variants would be suitable","title":"Parameter Arguments"},{"location":"guide_args/#internal-file-arguments","text":"--model_file model result generated from the build-model subprogram --clump_prefix prefix for files generated by clump step --beta_prefix prefix for files generated by beta step --predict_prefix prefix for files generated by predict step --result_file prs result files","title":"Internal File Arguments"},{"location":"guide_args/#file-column-names","text":"","title":"File Column Names"},{"location":"guide_args/#phenotype-files","text":"--phenotype Phenotype File Field: phenotype --covariates Phenotype File Field: comma separated list of covariates","title":"Phenotype Files"},{"location":"guide_args/#sumstats-files","text":"--ssf-snpid Sumstats field: snp ID --ssf-ref Sumstats Field: reference allele --ssf-alt Sumstats Field: alt allele --ssf-maf Sumstats Field: MAF --ssf-beta Sumstats Field: linear regression effect or log odds --ssf-se Sumstats field: standard error --ssf-p Sumstats field: P-value --ssf-n Sumstats Field: Sample Size","title":"Sumstats Files"},{"location":"guide_background/","text":"BridgePRS is a trans-ancestry PRS software which improves polygenic risk score analysis in under-represented target populations by combining summary statistics from under-represented target populations (e.g. Africans) with those from a powerful GWAS (e.g. Europeans). Background PRS methods require as input summary statistics from genome wide association studies. If unfamiliar with GWAS or in need of a refresher consider reading this paper . Genome-wide association studies (GWAS) involve analyzing the genomes of a large group of individuals. For a binary trait (like blue or brown eyes) this involves comparing the frequency of genetic variations in each group to produce an odds-ratio (measure of association) and a p-value to measure the signficance of the realtionship at each SNP. For continuous measures (like height) this results in an effect size (measure of continuous association) and p-value that measure the significance of our relationship. GWAS results can be summarized in a sumstats file which looks like this: CHR ID REF A1 A1_FREQ OBS_CT SE BETA P 1 rs100 A T 0.1 100 0.01 1.10 0.01 2 rs200 C G 0.2 100 0.02 -1.10 0.05 3 rs300 G A 0.3 100 0.03 1.02 0.10 PRS basics Polygenic scores combine genetic variant associations genome-wide by summing their effects to produce individual scores that predict the phenotype. Different PRS methods use different statistical methods to select variants and estimate their effect sizes for use in the PRS. BridgePRS, like many other PRS methods, requires genotype and phenotype data from individuals (several hundred samples) in addition to GWAS summary statistics to estimate the PRS. The predictive power of PRS is assessed in genotype and phenotype data from unseen samples. BridgePRS reports PRS accuracy by the residual variance explained \\(R^2\\) (accounting for the variance explained by the non-genetic covariates included in the model). For binary traits Nagelkerke \\(R^2\\) is used. Cross Population Analysis The PRS Portability Problem Often when a PRS trained using data from one population, e.g. European, is applied to a population of a different ancestry, e.g. African, the PRS model is less predictive. Often there is insufficient data in the non-European population to estimate good ancestry specific PRS using this data alone. Using single ancestry PRS methods researchers are left with two choices: An underpowered PRS model estimated using only data the target (non-European) population. A PRS estimated using a well powered GWAS from Europeans The BridgePRS Solution BridgePRS combines GWAS summary statistics from two populations, typically a large well powered GWAS from a \"base\" population (e.g. European) and a smaller GWAS from the target population (e.g. African). Figure 1 of our Nature Genetics Paper gives an overview of the modelling implemented by BridgePRS. Figure 1 shows the three models, M1-3, estimated by BridgePRS which are subsequently combined to give the final PRS. Below we outline these three models Model M1: BridgePRS uses two prior distributions to estimate PRS which we describe as Stage 1 and Stage 2. Stage 1 analysis is a single population analysis and applies zero centred Gaussian prior distributions to SNP effect sizes within clumps. Stage 2 uses the output from a Stage 1 analysis of the base population as the prior for the target population. Model M2: This is a single population analysis using Stage 1 analyis applied to the target populationto produce two sets of SNP weights Model M3: M1 and M2 both produce PRS estimated under different prior parameter settings. These PRS are combined in a ridge regression fit to the target data to give models M1 and M2. Model M3 is estimated by combining both sets of PRS in a ridge regression fit. Model M1 reflects the belief that the target population GWAS is only informative in conjugtion with the base population GWAS. Model M2 reflects the belief that the target population GWAS is informative and the base population GWAS gives no addition information. Models M3 reflects the belief both the base and target population GWAS contribute independent information. Since we do not know apriori which of the three scenarios (M1, M2, or M3) are true, BridgePRS weights and sums all three models to produce and evaluate a single target population PRS. BridgePRS also reports SNP weights and PRS R2 values in the target population for each of the three other models (M1, M2, or M3), enabling the user to use any of the four models. Further detals outlining this modelling is shown in Figure 1 of our Nature Genetics Paper","title":"Background"},{"location":"guide_background/#background","text":"PRS methods require as input summary statistics from genome wide association studies. If unfamiliar with GWAS or in need of a refresher consider reading this paper . Genome-wide association studies (GWAS) involve analyzing the genomes of a large group of individuals. For a binary trait (like blue or brown eyes) this involves comparing the frequency of genetic variations in each group to produce an odds-ratio (measure of association) and a p-value to measure the signficance of the realtionship at each SNP. For continuous measures (like height) this results in an effect size (measure of continuous association) and p-value that measure the significance of our relationship. GWAS results can be summarized in a sumstats file which looks like this: CHR ID REF A1 A1_FREQ OBS_CT SE BETA P 1 rs100 A T 0.1 100 0.01 1.10 0.01 2 rs200 C G 0.2 100 0.02 -1.10 0.05 3 rs300 G A 0.3 100 0.03 1.02 0.10","title":"Background"},{"location":"guide_background/#prs-basics","text":"Polygenic scores combine genetic variant associations genome-wide by summing their effects to produce individual scores that predict the phenotype. Different PRS methods use different statistical methods to select variants and estimate their effect sizes for use in the PRS. BridgePRS, like many other PRS methods, requires genotype and phenotype data from individuals (several hundred samples) in addition to GWAS summary statistics to estimate the PRS. The predictive power of PRS is assessed in genotype and phenotype data from unseen samples. BridgePRS reports PRS accuracy by the residual variance explained \\(R^2\\) (accounting for the variance explained by the non-genetic covariates included in the model). For binary traits Nagelkerke \\(R^2\\) is used.","title":"PRS basics"},{"location":"guide_background/#cross-population-analysis","text":"The PRS Portability Problem Often when a PRS trained using data from one population, e.g. European, is applied to a population of a different ancestry, e.g. African, the PRS model is less predictive. Often there is insufficient data in the non-European population to estimate good ancestry specific PRS using this data alone. Using single ancestry PRS methods researchers are left with two choices: An underpowered PRS model estimated using only data the target (non-European) population. A PRS estimated using a well powered GWAS from Europeans The BridgePRS Solution BridgePRS combines GWAS summary statistics from two populations, typically a large well powered GWAS from a \"base\" population (e.g. European) and a smaller GWAS from the target population (e.g. African). Figure 1 of our Nature Genetics Paper gives an overview of the modelling implemented by BridgePRS. Figure 1 shows the three models, M1-3, estimated by BridgePRS which are subsequently combined to give the final PRS. Below we outline these three models Model M1: BridgePRS uses two prior distributions to estimate PRS which we describe as Stage 1 and Stage 2. Stage 1 analysis is a single population analysis and applies zero centred Gaussian prior distributions to SNP effect sizes within clumps. Stage 2 uses the output from a Stage 1 analysis of the base population as the prior for the target population. Model M2: This is a single population analysis using Stage 1 analyis applied to the target populationto produce two sets of SNP weights Model M3: M1 and M2 both produce PRS estimated under different prior parameter settings. These PRS are combined in a ridge regression fit to the target data to give models M1 and M2. Model M3 is estimated by combining both sets of PRS in a ridge regression fit. Model M1 reflects the belief that the target population GWAS is only informative in conjugtion with the base population GWAS. Model M2 reflects the belief that the target population GWAS is informative and the base population GWAS gives no addition information. Models M3 reflects the belief both the base and target population GWAS contribute independent information. Since we do not know apriori which of the three scenarios (M1, M2, or M3) are true, BridgePRS weights and sums all three models to produce and evaluate a single target population PRS. BridgePRS also reports SNP weights and PRS R2 values in the target population for each of the three other models (M1, M2, or M3), enabling the user to use any of the four models. Further detals outlining this modelling is shown in Figure 1 of our Nature Genetics Paper","title":"Cross Population Analysis"},{"location":"guide_commands/","text":"Commands Main Pipeline A pipeline implementin the BridgePRS method desribed in our Nature Genetics paper can be run with the following command: bridgePRS pipeline go Which is typically run using two population configuration files and information about population distance and phenotype: bridgePRS pipeline go -o out --config_files BASE.config TARGET.config --phenotype height --fst 0.1 To confirm that the population config files and options requested are compatible and properly formatted, the following command can be used before running bridgePRS. bridgePRS pipeline check The BridgePRS pipeline command consists of multiple related subprograms that correspond to the Stage 1 and Stage 2 analyses described in our guide and shown in Figure 1 in our Nature Genetics Paper . BridgePRS runs these programs serially and produces output for each model type in the following folders: out/prs-single_TARGET Model 1 (single population) results. out/prs-prior_TARGET-BASE Model 2 (informed prior from base pop) result. out/prs-combined_TARGET-BASE The Model 3 (M1+M2) result and a final weighted result. Pipeline Subprograms Each of pipeline subprograms can be run separately using the following commands: prs-single Stage 1 analysis to estimate model M1 in the target population can be carried as a standalone single population analysis or as part of the larger pipeline where it is used to capture target population specific effects: bridgePRS prs-single run -o out --config_file TARGET.config --phenotype height This subprogram will produce a result file (out/prs-single_TARGET/bridge.target.prs-single.result) that can be used for later analysis. build-model Stage 1 analysis in the base population for input into Stage 2: bridgePRS build-model run -o out --config_file BASE.config --phenotype height This subprogram will produce a model result file (out/build-model_BASE/bridge.base.build-model.result) that can be used in the next step. prs-prior Stage 2 analysis to estimate the informed model M2 for the target population: bridgePRS prs-prior run -o out --model_file out/build-model_BASE/brige.base.build-model.result --config_file TARGET.config --phenotype height This subprogram will produce a result file (out/prs-prior_TARGET-BASE/bridge.target-base.prs-prior.result) that can be used for later analysis. analyse The Stage 1 and Stage 2 analysis can be analyzed and combined with the following command: bridgePRS analyze combine -o out --result_files out/prs-single_TARGET/bridge.target.prs-single.result out/prs-prior_TARGET-BASE/bridge.target-base.prs-prior.result This subprogram will produce result files and plots (by default) in the directory out/prs-combine_TARGET_BASE. prs-port Optionally, if gwas summary statistics are not available for the target population, the results from the base population can be ported directly to estimate the target GWAS. bridgePRS prs-port run -o out --model_file out/build-model_BASE/brige.base.build-model.result --config_file TARGET.config --phenotype height To run this step in the pipeline the flag --port can be added. Axillary Tools BridgePRS contains a suite of tools that can be used to reformat files, create config files, and validate file types. These programs can be called using the command: bridgePRS tools check-requirements To check if your system settings are compatible with bridgePRS, please type the command: bridgePRS tools check-requirements check-pop To validate inputs and create a single population configuration file, a command similar to the following can be run: bridgePRS tools check-pop --sumstats_prefix TARGET.SUMSTATS.txt --genotype_prefix TARGET_GENOTYPES.txt --phenotype_file TARGET_PHENOTYPES.txt --sumstats_size 100000 This program will produce a new config file that can be used for this population. check-pops To validate inputs for two populations (base and target) and create two population configuration files, a command similar to the following can be run: bridgePRS tools check-pops --sumstats_prefix BASE.SUMsTATS.txt TARGET.SUMSTATS.txt --genotype_prefix BASE_GENOTYPES.txt TARGET_GENOTYPES.txt --phenotype_file TARGET_PHENOTYPES.txt --sumstats_size 100000 This program will produce two config files for later use. reformat-sumstats Sumstats files are not standardized and often omit information like ref/alt alleles. For this reason bridgePRS allows you to reformat a sumstats file using genotype data to confirm/add information, using the following command: bridgePRS tools reformat-sumstats --sumstats_prefix TARGET.SUMSTATS.txt --genotype_prefix TARGET_GENOTYPES.txt This program will produce a new sumstats file for this population.","title":"Commands"},{"location":"guide_commands/#commands","text":"","title":"Commands"},{"location":"guide_commands/#main-pipeline","text":"A pipeline implementin the BridgePRS method desribed in our Nature Genetics paper can be run with the following command: bridgePRS pipeline go Which is typically run using two population configuration files and information about population distance and phenotype: bridgePRS pipeline go -o out --config_files BASE.config TARGET.config --phenotype height --fst 0.1 To confirm that the population config files and options requested are compatible and properly formatted, the following command can be used before running bridgePRS. bridgePRS pipeline check The BridgePRS pipeline command consists of multiple related subprograms that correspond to the Stage 1 and Stage 2 analyses described in our guide and shown in Figure 1 in our Nature Genetics Paper . BridgePRS runs these programs serially and produces output for each model type in the following folders: out/prs-single_TARGET Model 1 (single population) results. out/prs-prior_TARGET-BASE Model 2 (informed prior from base pop) result. out/prs-combined_TARGET-BASE The Model 3 (M1+M2) result and a final weighted result.","title":"Main Pipeline"},{"location":"guide_commands/#pipeline-subprograms","text":"Each of pipeline subprograms can be run separately using the following commands:","title":"Pipeline Subprograms"},{"location":"guide_commands/#prs-single","text":"Stage 1 analysis to estimate model M1 in the target population can be carried as a standalone single population analysis or as part of the larger pipeline where it is used to capture target population specific effects: bridgePRS prs-single run -o out --config_file TARGET.config --phenotype height This subprogram will produce a result file (out/prs-single_TARGET/bridge.target.prs-single.result) that can be used for later analysis.","title":"prs-single"},{"location":"guide_commands/#build-model","text":"Stage 1 analysis in the base population for input into Stage 2: bridgePRS build-model run -o out --config_file BASE.config --phenotype height This subprogram will produce a model result file (out/build-model_BASE/bridge.base.build-model.result) that can be used in the next step.","title":"build-model"},{"location":"guide_commands/#prs-prior","text":"Stage 2 analysis to estimate the informed model M2 for the target population: bridgePRS prs-prior run -o out --model_file out/build-model_BASE/brige.base.build-model.result --config_file TARGET.config --phenotype height This subprogram will produce a result file (out/prs-prior_TARGET-BASE/bridge.target-base.prs-prior.result) that can be used for later analysis.","title":"prs-prior"},{"location":"guide_commands/#analyse","text":"The Stage 1 and Stage 2 analysis can be analyzed and combined with the following command: bridgePRS analyze combine -o out --result_files out/prs-single_TARGET/bridge.target.prs-single.result out/prs-prior_TARGET-BASE/bridge.target-base.prs-prior.result This subprogram will produce result files and plots (by default) in the directory out/prs-combine_TARGET_BASE.","title":"analyse"},{"location":"guide_commands/#prs-port","text":"Optionally, if gwas summary statistics are not available for the target population, the results from the base population can be ported directly to estimate the target GWAS. bridgePRS prs-port run -o out --model_file out/build-model_BASE/brige.base.build-model.result --config_file TARGET.config --phenotype height To run this step in the pipeline the flag --port can be added.","title":"prs-port"},{"location":"guide_commands/#axillary-tools","text":"BridgePRS contains a suite of tools that can be used to reformat files, create config files, and validate file types. These programs can be called using the command: bridgePRS tools","title":"Axillary Tools"},{"location":"guide_commands/#check-requirements","text":"To check if your system settings are compatible with bridgePRS, please type the command: bridgePRS tools check-requirements","title":"check-requirements"},{"location":"guide_commands/#check-pop","text":"To validate inputs and create a single population configuration file, a command similar to the following can be run: bridgePRS tools check-pop --sumstats_prefix TARGET.SUMSTATS.txt --genotype_prefix TARGET_GENOTYPES.txt --phenotype_file TARGET_PHENOTYPES.txt --sumstats_size 100000 This program will produce a new config file that can be used for this population.","title":"check-pop"},{"location":"guide_commands/#check-pops","text":"To validate inputs for two populations (base and target) and create two population configuration files, a command similar to the following can be run: bridgePRS tools check-pops --sumstats_prefix BASE.SUMsTATS.txt TARGET.SUMSTATS.txt --genotype_prefix BASE_GENOTYPES.txt TARGET_GENOTYPES.txt --phenotype_file TARGET_PHENOTYPES.txt --sumstats_size 100000 This program will produce two config files for later use.","title":"check-pops"},{"location":"guide_commands/#reformat-sumstats","text":"Sumstats files are not standardized and often omit information like ref/alt alleles. For this reason bridgePRS allows you to reformat a sumstats file using genotype data to confirm/add information, using the following command: bridgePRS tools reformat-sumstats --sumstats_prefix TARGET.SUMSTATS.txt --genotype_prefix TARGET_GENOTYPES.txt This program will produce a new sumstats file for this population.","title":"reformat-sumstats"},{"location":"guide_customization/","text":"Input Data LD Reference Data: Custom Data BridgePRS requires genotype data in PLINK binary format from samples representative of the base and target population GWASs. To pass user supplied LD reference data for a population named POP , create folder a (named POP_ld ) which includes: A .bed , .bim , and .fam file for each chromosome with format \"chr\"[1-22]\".ext\" POP_ids.txt , a txt file that lists the sample IDs for your population(s) Then use the command line argument --ld_path to point to the location of this folder on your computer.","title":"Customization"},{"location":"guide_customization/#input-data","text":"","title":"Input Data"},{"location":"guide_customization/#ld-reference-data-custom-data","text":"BridgePRS requires genotype data in PLINK binary format from samples representative of the base and target population GWASs. To pass user supplied LD reference data for a population named POP , create folder a (named POP_ld ) which includes: A .bed , .bim , and .fam file for each chromosome with format \"chr\"[1-22]\".ext\" POP_ids.txt , a txt file that lists the sample IDs for your population(s) Then use the command line argument --ld_path to point to the location of this folder on your computer.","title":"LD Reference Data: Custom Data"},{"location":"guide_input/","text":"Input Data The LD Reference Panel BridgePRS requires representative genotype data in PLINK binary (bed) format to estimate LD. A thinned LD reference panel (19734 SNPs) for use with the quick start tutorial is included in the BridgePRS download ( data/1000G_sample ). Three full-size 1000 Genomes panels covering AFR , EUR , EAS , SAS , and AMR super-populations with different SNP sets are available for download: (1) All HapMap Variants ,(2) All 1000G variants with MAF>5% in any of the five 1000G super-populations ,(3) All 1000G variants with MAF>1% in any of the five 1000G super-populations . To run bridgePRS using a custom LD reference panel see customisation . Config Files For the target and base populations BridgePRS requires inputs be supplied in population configuration files. The following arguments are required in the target configuration file: Variable Name Description POP Population name label, eg. AFR LDPOP Name of 1000G population used to estimate LD (AFR, AMR, EAS, EAS, SAS) LD_PATH Path to LD reference data SUMSTATS_FILE Sumstats filename used for genomewide summary statistics, can be gzipped SUMSTATS_PREFIX Sumstats prefix used for summary statistics split by chr, eg. height_chr SUMSTATS_SUFFIX sumstats suffix, eg .txt.gz , gives sumstats files height_chr1.txt.gz -- height_chr22.txt.gz SUMSTATS_SIZE GWAS sample size (required for multi-ancestry) GENOTYPE_PREFIX Path and prefix to plink bed files of test samples PHENOTYPE_FILE Filename of phenotype(s) and covariates of test data The following optional inputs can also be supplied: Variable Name Description VALIDATION_FILE Filename of phenotype(s) and covariates of validation data SNP_FILE File listing SNP ids to use in analysis, eg. QCed SNPs MAX_CLUMP_SIZE Maximum number of SNPs per clump COVARIATES List of covariates (comma separated) to use, eg: COVARIATES=PC1,PC2,PC3 bridgePRS requires GWAS summary statistics with SNP id (to match to LD reference data), reference allele, alternate allele, p-value, and effect size (linear regression coefficient or log odds). Columns can be supplied in any order. Column names are specified in one of two ways as described below: Variable Name Description SUMSTATS_FIELDS List of summary statistic column names in the order listed below, e.g, SUMSTATS_FIELDS=ID,REF,A1,P,BETA SSF-SNPID Column name of SNP id (default ID) SSF-REF Column name of non-effect allele (default REF) SSF-ALT Column name of effect allele (default ALT) SSF-P Column name of P-value (default P) SSF-BETA Column name of effect size (default BETA) Creating a Config File: Creating a Configuration File The following command will validate the command line data and create a target configuration file ./bridgePRS tools check-pop -o test --pop AFR --ld_path ./data/1000G_sample/ --sumstats_prefix ./data/pop_AFR/sumstats/AFR.chr --sumstats_size 10000 --genotype_prefix ./data/pop_AFR/genotypes/chr --phenotype_file ./data/pop_AFR/phenotypes/AFR_test.dat To create a target and base configuation file you can use the following command: ./bridgePRS tools check-pops -o test --pop AFR EUR --ld_path ./data/1000G_sample/ --sumstats_prefix ./data/pop_AFR/sumstats/AFR.chr ./data/pop_EUR/sumstats/EUR.chr --sumstats_size 10000 100000 --genotype_prefix ./data/pop_AFR/genotypes/chr --phenotype_file ./data/pop_AFR/phenotypes/AFR_test.dat This command will create target and base configuration files can be observed below: Config Files: Target/Base Population Data: cat test/save/target.AFR.config POP = AFR LDPOP = AFR LD_PATH =$ BRIDGEDIR / data /1000 G_sample SUMSTATS_PREFIX = test / save / sumstats / ss.AFR. SUMSTATS_SUFFIX = .out.gz SUMSTATS_FIELDS = ID,REF,A1,P,BETA SUMSTATS_SIZE =10000 SNP_FILE = test / save / snps.afr_valid.txt GENOTYPE_PREFIX =$ BRIDGEDIR / data / pop_AFR / genotypes / chr PHENOTYPE_FILE = tests / save / AFR.test_phenos.dat VALIDATION_FILE = test / save / AFR.valid_phenos.dat cat out/save/base.EUR.config POP = EUR LDPOP = EUR LD_PATH =$ BRIDGEDIR / data /1000 G_sample SUMSTATS_PREFIX = test / save / sumstats / ss.EUR. SUMSTATS_SUFFIX = .out.gz SUMSTATS_FIELDS = ID,REF,A1,P,BETA SUMSTATS_SIZE =100000 SNP_FILE = test / save / snps.afr_valid.txt GENOTYPE_PREFIX =$ BRIDGEDIR / data / pop_AFR / genotypes / chr PHENOTYPE_FILE =$ BRIDGEDIR / data / pop_AFR / phenotypes / AFR_test.dat File Specifications 1) Sumstats Data GWAS summary statistics are provided using a prefix to one or many (per chromosome) files with the --sumstats_prefix argument and the --sumstats_suffix argument when nevecessary. GWAS summary statistics must be provided as a whitespace delimited file containing the results of an association study for a given phenotype. BridgePRS has no problem reading in a gzipped base file (need to have a .gz suffix) or splitting the file by chromosome if necessary. An example of a sumstats file with default column headers is shown: Defaults #CHR ID REF A1 P BETA Variable --ssf-snpid --ssf-ref --ssf-alt --ssf-p --ssf-beta Data 1 rs121 T G 0.0413692 0.9472871 Data 1 rs497 C A 0.328347 -1.193074 Data 1 rs271 G G 0.0132225 0.413687 2) Genotype Files Genotype files must be in binary plink format (bed, bim, fam). 3) Phenotype Files Phenotype files are provided to BridgePRS using --phenotype_files for test data and -- . This must be a tab / space delimited file and missing data must be represented by either NA or -9 (only for binary traits). The first two column of the phenotype file should be the FID and the IID, and the rest can be phenotypes/covariates: FID IID y y.binary PC1 PC2 afr1_1 afr2_1 24.4 1 0.53 0.950 afr1_2 afr2_2 4.10 0 0.59 0.450 afr1_3 afr2_3 37.2 1 0.73 -0.13 afr1_4 afr2_4 5.40 0 0.44 -0.55 The phenotype of interest can be specified with the --phenotype flag and the covariates can be given as a comma separated list after the --covariates flag: 4) QC SNP List To select only SNPS that have passed QC, you can include a single column text file using the --snp_file flag.","title":"Input Data"},{"location":"guide_input/#input-data","text":"","title":"Input Data"},{"location":"guide_input/#the-ld-reference-panel","text":"BridgePRS requires representative genotype data in PLINK binary (bed) format to estimate LD. A thinned LD reference panel (19734 SNPs) for use with the quick start tutorial is included in the BridgePRS download ( data/1000G_sample ). Three full-size 1000 Genomes panels covering AFR , EUR , EAS , SAS , and AMR super-populations with different SNP sets are available for download: (1) All HapMap Variants ,(2) All 1000G variants with MAF>5% in any of the five 1000G super-populations ,(3) All 1000G variants with MAF>1% in any of the five 1000G super-populations . To run bridgePRS using a custom LD reference panel see customisation .","title":"The LD Reference Panel"},{"location":"guide_input/#config-files","text":"For the target and base populations BridgePRS requires inputs be supplied in population configuration files. The following arguments are required in the target configuration file: Variable Name Description POP Population name label, eg. AFR LDPOP Name of 1000G population used to estimate LD (AFR, AMR, EAS, EAS, SAS) LD_PATH Path to LD reference data SUMSTATS_FILE Sumstats filename used for genomewide summary statistics, can be gzipped SUMSTATS_PREFIX Sumstats prefix used for summary statistics split by chr, eg. height_chr SUMSTATS_SUFFIX sumstats suffix, eg .txt.gz , gives sumstats files height_chr1.txt.gz -- height_chr22.txt.gz SUMSTATS_SIZE GWAS sample size (required for multi-ancestry) GENOTYPE_PREFIX Path and prefix to plink bed files of test samples PHENOTYPE_FILE Filename of phenotype(s) and covariates of test data The following optional inputs can also be supplied: Variable Name Description VALIDATION_FILE Filename of phenotype(s) and covariates of validation data SNP_FILE File listing SNP ids to use in analysis, eg. QCed SNPs MAX_CLUMP_SIZE Maximum number of SNPs per clump COVARIATES List of covariates (comma separated) to use, eg: COVARIATES=PC1,PC2,PC3 bridgePRS requires GWAS summary statistics with SNP id (to match to LD reference data), reference allele, alternate allele, p-value, and effect size (linear regression coefficient or log odds). Columns can be supplied in any order. Column names are specified in one of two ways as described below: Variable Name Description SUMSTATS_FIELDS List of summary statistic column names in the order listed below, e.g, SUMSTATS_FIELDS=ID,REF,A1,P,BETA SSF-SNPID Column name of SNP id (default ID) SSF-REF Column name of non-effect allele (default REF) SSF-ALT Column name of effect allele (default ALT) SSF-P Column name of P-value (default P) SSF-BETA Column name of effect size (default BETA)","title":"Config Files"},{"location":"guide_input/#creating-a-config-file","text":"Creating a Configuration File The following command will validate the command line data and create a target configuration file ./bridgePRS tools check-pop -o test --pop AFR --ld_path ./data/1000G_sample/ --sumstats_prefix ./data/pop_AFR/sumstats/AFR.chr --sumstats_size 10000 --genotype_prefix ./data/pop_AFR/genotypes/chr --phenotype_file ./data/pop_AFR/phenotypes/AFR_test.dat To create a target and base configuation file you can use the following command: ./bridgePRS tools check-pops -o test --pop AFR EUR --ld_path ./data/1000G_sample/ --sumstats_prefix ./data/pop_AFR/sumstats/AFR.chr ./data/pop_EUR/sumstats/EUR.chr --sumstats_size 10000 100000 --genotype_prefix ./data/pop_AFR/genotypes/chr --phenotype_file ./data/pop_AFR/phenotypes/AFR_test.dat This command will create target and base configuration files can be observed below:","title":"Creating a Config File:"},{"location":"guide_input/#config-files-targetbase-population-data","text":"cat test/save/target.AFR.config POP = AFR LDPOP = AFR LD_PATH =$ BRIDGEDIR / data /1000 G_sample SUMSTATS_PREFIX = test / save / sumstats / ss.AFR. SUMSTATS_SUFFIX = .out.gz SUMSTATS_FIELDS = ID,REF,A1,P,BETA SUMSTATS_SIZE =10000 SNP_FILE = test / save / snps.afr_valid.txt GENOTYPE_PREFIX =$ BRIDGEDIR / data / pop_AFR / genotypes / chr PHENOTYPE_FILE = tests / save / AFR.test_phenos.dat VALIDATION_FILE = test / save / AFR.valid_phenos.dat cat out/save/base.EUR.config POP = EUR LDPOP = EUR LD_PATH =$ BRIDGEDIR / data /1000 G_sample SUMSTATS_PREFIX = test / save / sumstats / ss.EUR. SUMSTATS_SUFFIX = .out.gz SUMSTATS_FIELDS = ID,REF,A1,P,BETA SUMSTATS_SIZE =100000 SNP_FILE = test / save / snps.afr_valid.txt GENOTYPE_PREFIX =$ BRIDGEDIR / data / pop_AFR / genotypes / chr PHENOTYPE_FILE =$ BRIDGEDIR / data / pop_AFR / phenotypes / AFR_test.dat","title":"Config Files: Target/Base Population Data:"},{"location":"guide_input/#file-specifications","text":"","title":"File Specifications"},{"location":"guide_input/#1-sumstats-data","text":"GWAS summary statistics are provided using a prefix to one or many (per chromosome) files with the --sumstats_prefix argument and the --sumstats_suffix argument when nevecessary. GWAS summary statistics must be provided as a whitespace delimited file containing the results of an association study for a given phenotype. BridgePRS has no problem reading in a gzipped base file (need to have a .gz suffix) or splitting the file by chromosome if necessary. An example of a sumstats file with default column headers is shown: Defaults #CHR ID REF A1 P BETA Variable --ssf-snpid --ssf-ref --ssf-alt --ssf-p --ssf-beta Data 1 rs121 T G 0.0413692 0.9472871 Data 1 rs497 C A 0.328347 -1.193074 Data 1 rs271 G G 0.0132225 0.413687","title":"1) Sumstats Data"},{"location":"guide_input/#2-genotype-files","text":"Genotype files must be in binary plink format (bed, bim, fam).","title":"2) Genotype Files"},{"location":"guide_input/#3-phenotype-files","text":"Phenotype files are provided to BridgePRS using --phenotype_files for test data and -- . This must be a tab / space delimited file and missing data must be represented by either NA or -9 (only for binary traits). The first two column of the phenotype file should be the FID and the IID, and the rest can be phenotypes/covariates: FID IID y y.binary PC1 PC2 afr1_1 afr2_1 24.4 1 0.53 0.950 afr1_2 afr2_2 4.10 0 0.59 0.450 afr1_3 afr2_3 37.2 1 0.73 -0.13 afr1_4 afr2_4 5.40 0 0.44 -0.55 The phenotype of interest can be specified with the --phenotype flag and the covariates can be given as a comma separated list after the --covariates flag:","title":"3) Phenotype Files"},{"location":"guide_input/#4-qc-snp-list","text":"To select only SNPS that have passed QC, you can include a single column text file using the --snp_file flag.","title":"4) QC SNP List"},{"location":"guide_output/","text":"Output Data For every PRS invocation of BridgePRS (single, port, and prior) BridgePRS produces the following output files. Weighted combined versions of each files of also produced by BridgePRS. Name file extension Brief Description SNP Weights .snp_weights.dat Snp weights PRS Values .preds.dat Predicted Phenotypes Summary Result .var_explained.txt Performance Summary Progress Plot bridgePRS-{subProgram}.png Performance Summary","title":"Output Data"},{"location":"guide_output/#output-data","text":"For every PRS invocation of BridgePRS (single, port, and prior) BridgePRS produces the following output files. Weighted combined versions of each files of also produced by BridgePRS. Name file extension Brief Description SNP Weights .snp_weights.dat Snp weights PRS Values .preds.dat Predicted Phenotypes Summary Result .var_explained.txt Performance Summary Progress Plot bridgePRS-{subProgram}.png Performance Summary","title":"Output Data"},{"location":"guide_pipeline/","text":"Main Program A pipeline implementin the BridgePRS method desribed in our Nature Genetics paper can be run with the following command: BridgePRS pipeline go The pipeline requires the following input from both the target and base populations: --pop: The population name --ldpop: The ld reference population, if different from population name --sumstats_prefix: Sumstats data --genotype_prefix: Target Genotype Data --phenotype_file: Target Phenotype File This information can be provided on the command line or using config files. The pipeline runs multiple subprograms that are described below. Modelling overview Figure 1 of our Nature Genetics paper provides an overview of the modelling implemented by BridgePRS. BridgePRS uses two prior distributions to estimate PRS which we describe as Stage 1 and Stage 2. Stage 1 analysis is a single population analysis and applies zero centred Gaussian prior distributions to SNP effect sizes within clumps. Stage 2 uses the output from a Stage 1 analysis of the base population as the prior for the target population, this analysis produces model M1 in Figure 1. Stage 1 analysis of the target population produces model M2. Model M3 combines PRS from both Stage 1 and Stage 2 analyses. The final BridgePRS model is a weighted sum of models M1, M2 and M3. Stage 2 only model (M1) reflects the belief that the target population GWAS is only informative in conjugtion with the base population GWAS. Stage 1 only model (M2) reflects the belief that the target population GWAS is informative and the base population GWAS gives no addition information. Stage 1 and stage 2 models (M3) reflects the belief both the base and target population GWAS contribute independent information. Since apriori we do not know which of the three scenarios corresponding to models M1, M2 and M3 are true, BridgePRS weights these models to produce a single target population PRS. However, BridgePRS reports SNP weights and R2 in the target population for both the weighted model and M1, M2 and M3 enabling the user to use any of the four models. Subprograms 1) BridgePRS prs-single -- Stage 1 analysis to estimate models M2 and M3 2) BridgePRS build-model -- Stage 1 analysis for input into Stage 2 3) BridgePRS prs-prior -- Stage 2 analysis to estimate models M1 and M3 4) BridgePRS analyse combine -- Estimates models M1, M2, M3 and weighted model 5) BridgePRS prs-port -- Estimates target PRS without target GWAS prs-single -- Stage 1 analysis in the NG paper prs-single performs single population analysis. It is used by the main pipeline to capture target population specific effects. prs-single can be run on its own with the command ./bridgePRS prs-single run with the following arguments on the command line or configuration file: --pop: The name of your target population --ldpop: The ld reference name, if different from target population name --sumstats_prefix: Sumstats data --genotype_prefix: Target Genotype Data --phenotype_file: Target Phenotype File prs-port prs-port estimates a target population PRS without GWAS summary statistics from the target population by optimising base population PRS using individual level data from the target population. prs-port is run with the command ./bridgePRS prs-port run with the following arguments on the command line or configuration file:","title":"Guide pipeline"},{"location":"guide_pipeline/#main-program","text":"A pipeline implementin the BridgePRS method desribed in our Nature Genetics paper can be run with the following command: BridgePRS pipeline go The pipeline requires the following input from both the target and base populations: --pop: The population name --ldpop: The ld reference population, if different from population name --sumstats_prefix: Sumstats data --genotype_prefix: Target Genotype Data --phenotype_file: Target Phenotype File This information can be provided on the command line or using config files. The pipeline runs multiple subprograms that are described below.","title":"Main Program"},{"location":"guide_pipeline/#modelling-overview","text":"Figure 1 of our Nature Genetics paper provides an overview of the modelling implemented by BridgePRS. BridgePRS uses two prior distributions to estimate PRS which we describe as Stage 1 and Stage 2. Stage 1 analysis is a single population analysis and applies zero centred Gaussian prior distributions to SNP effect sizes within clumps. Stage 2 uses the output from a Stage 1 analysis of the base population as the prior for the target population, this analysis produces model M1 in Figure 1. Stage 1 analysis of the target population produces model M2. Model M3 combines PRS from both Stage 1 and Stage 2 analyses. The final BridgePRS model is a weighted sum of models M1, M2 and M3. Stage 2 only model (M1) reflects the belief that the target population GWAS is only informative in conjugtion with the base population GWAS. Stage 1 only model (M2) reflects the belief that the target population GWAS is informative and the base population GWAS gives no addition information. Stage 1 and stage 2 models (M3) reflects the belief both the base and target population GWAS contribute independent information. Since apriori we do not know which of the three scenarios corresponding to models M1, M2 and M3 are true, BridgePRS weights these models to produce a single target population PRS. However, BridgePRS reports SNP weights and R2 in the target population for both the weighted model and M1, M2 and M3 enabling the user to use any of the four models.","title":"Modelling overview"},{"location":"guide_pipeline/#subprograms","text":"1) BridgePRS prs-single -- Stage 1 analysis to estimate models M2 and M3 2) BridgePRS build-model -- Stage 1 analysis for input into Stage 2 3) BridgePRS prs-prior -- Stage 2 analysis to estimate models M1 and M3 4) BridgePRS analyse combine -- Estimates models M1, M2, M3 and weighted model 5) BridgePRS prs-port -- Estimates target PRS without target GWAS","title":"Subprograms"},{"location":"guide_pipeline/#prs-single-stage-1-analysis-in-the-ng-paper","text":"prs-single performs single population analysis. It is used by the main pipeline to capture target population specific effects. prs-single can be run on its own with the command ./bridgePRS prs-single run with the following arguments on the command line or configuration file: --pop: The name of your target population --ldpop: The ld reference name, if different from target population name --sumstats_prefix: Sumstats data --genotype_prefix: Target Genotype Data --phenotype_file: Target Phenotype File","title":"prs-single -- Stage 1 analysis in the NG paper"},{"location":"guide_pipeline/#prs-port","text":"prs-port estimates a target population PRS without GWAS summary statistics from the target population by optimising base population PRS using individual level data from the target population. prs-port is run with the command ./bridgePRS prs-port run with the following arguments on the command line or configuration file:","title":"prs-port"},{"location":"guide_shell/","text":"Using BridgePRS without Python See Here","title":"Using Bash"},{"location":"guide_shell/#using-bridgeprs-without-python","text":"See Here","title":"Using BridgePRS without Python"},{"location":"guide_usecases/","text":"Training In the two toy-data examples the target population was African ( AFR ) and the base population was European ( EUR ). In these examples each population had a corresponding: LD reference panel GWAS summary statistics file Individual levels genotype data in plink binary format Phenotype data Here we consider using BridgePRS in other scenarios with less available data. In each of these examples the task is to create valid configuration files given the described scenario. Challenge 1: I have access to genotype/phenotype data (<1000 samples, continuous phenotype) from a population in Central Africa (1,2). I would like ot run PRS as accurately as possible, but my dataset is not large enough to conduct GWAS, however, I do have access to a moderately sized (25,000 samples) GWAS summary statistics from a West African population (3) and access to summary statistics from a GWAS of a large (500k) European population (4). I also have access to the 1000G reference panels, how can I analyze my data? Available Data: caf/genotypes/caf_genotype.bed, caf_genotype.bim, caf_genotype.fam caf/phenotypes/caf_test.dat, ukb/phenotypes/caf_validation.dat yoruba/sumstats/yoruba.chr1.glm.gz,...,yoruba.chr22.glm.gz ukb/sumstats/ukb.sumstats.gz 1000G Reference Panel Can you fill out the configuration files to carry this out? Target Config File POP = LDPOP = LD_PATH = SUMSTATS_PREFIX = SUMSTATS_SUFFIX = SUMSTATS_SIZE = GENOTYPE_PREFIX = PHENOTYPE_FILE = VALIDATION_FILE = [Answer] POP = CAF LDPOP = AFR LD_PATH = data /1000 G_SAMPLE SUMSTATS_PREFIX = yoruba / sumstats / yoruba.chr SUMSTATS_SUFFIX = .glm.gz SUMSTATS_SIZE =25000 GENOTYPE_PREFIX = caf / genotypes / caf_genotype PHENOTYPE_FILE = caf / phenotypes / caf_test.dat VALIDATION_FILE = caf / phenotypes / caf_validation.dat Model Config FIle POP = LDPOP = LDPATH = SUMSTATS_FILE = SUMSTATS_SUFFIX = SUMSTATS_SIZE = GENOTYPE_PREFIX = PHENOTYPE_FILES = Answer POP = EUR LDPOP = EUR LD_PATH = data /1000 G_SAMPLE SUMSTATS_FILE = ukb / sumstats / ukb.sumstats.gz SUMSTATS_SIZE =500000 GENOTYPE_PREFIX = caf / genotypes / caf_genotype PHENOTYPE_FILE = caf / phenotypes / caf_test.dat VALIDATION_FILE = caf / phenotypes / caf_validation.dat Challenge 2: I have access to GWAS summary statistics (1) and genotype/phenotype (2,3) data (>2000 samples, binary phenotype) from a moderate sized population in Eastern Europe. I have reason to believe that this population has unique LD structure and would like to incorporate this into my model. I also have GWAS (4) and genotype/phenotype data from the UKB biobank (5,6) that I wish to use to improve my results, how should I do this? ukr/sumstats/ukr.sumstats.out ukr/genotypes/chr1.bed,bim,fam...chr22.bed,bin,fam, ukr/phenotypes/ukr_test.dat, ukr/phenotypes/ukr_validation.dat ukb/sumstats/ukb.sumstats.gz ukb/genotypes/chr1.bed,bim,fam...chr22.bed,bin,fam ukb/phenotypes/ukb_test.dat, ukb/phenotypes/ukb_validation.dat Target Config File POP = LDPOP = LDPATH = SUMSTATS_PREFIX = GENOTYPE_PREFIX = PHENOTYPE_FILE = VALIDATION_FILE = [Answer] POP = ukr LDPOP = ukr * LDPATH = CUSTOM SUMSTATS_PREFIX = ukr / sumstats / ukr.sumstats SUMSTATS_SIZE =2000 GENOTYPE_PREFIX = ukr / phenotypes / chr PHENOTYPE_FILE = ukr / phenotypes / ukr_test.dat VALIDATION_FILE = ukr / phenotypes / ukr_validation.dat Model Config FIle POP = LDPOP = SUMSTATS_PREFIX = GENOTYPE_PREFIX = PHENOTYPE_FILE = VALIDATION_FILE = Answer POP = UKB LDPOP = EUR LDPATH =1000 G SUMSTATS_PREFIX = ukb / sumstats / ukb.sumstats SUMSTATS_SIZE =500000 GENOTYPE_PREFIX = ukb / genotypes / chr PHENOTYPE_FILE = ukb / phenotypes / ukb_test.dat VALIDATION_FILE = ukb / phenotypes / ukb_validation.dat","title":"Use Cases"},{"location":"guide_usecases/#training","text":"In the two toy-data examples the target population was African ( AFR ) and the base population was European ( EUR ). In these examples each population had a corresponding: LD reference panel GWAS summary statistics file Individual levels genotype data in plink binary format Phenotype data Here we consider using BridgePRS in other scenarios with less available data. In each of these examples the task is to create valid configuration files given the described scenario.","title":"Training"},{"location":"guide_usecases/#challenge-1","text":"I have access to genotype/phenotype data (<1000 samples, continuous phenotype) from a population in Central Africa (1,2). I would like ot run PRS as accurately as possible, but my dataset is not large enough to conduct GWAS, however, I do have access to a moderately sized (25,000 samples) GWAS summary statistics from a West African population (3) and access to summary statistics from a GWAS of a large (500k) European population (4). I also have access to the 1000G reference panels, how can I analyze my data? Available Data: caf/genotypes/caf_genotype.bed, caf_genotype.bim, caf_genotype.fam caf/phenotypes/caf_test.dat, ukb/phenotypes/caf_validation.dat yoruba/sumstats/yoruba.chr1.glm.gz,...,yoruba.chr22.glm.gz ukb/sumstats/ukb.sumstats.gz 1000G Reference Panel Can you fill out the configuration files to carry this out? Target Config File POP = LDPOP = LD_PATH = SUMSTATS_PREFIX = SUMSTATS_SUFFIX = SUMSTATS_SIZE = GENOTYPE_PREFIX = PHENOTYPE_FILE = VALIDATION_FILE = [Answer] POP = CAF LDPOP = AFR LD_PATH = data /1000 G_SAMPLE SUMSTATS_PREFIX = yoruba / sumstats / yoruba.chr SUMSTATS_SUFFIX = .glm.gz SUMSTATS_SIZE =25000 GENOTYPE_PREFIX = caf / genotypes / caf_genotype PHENOTYPE_FILE = caf / phenotypes / caf_test.dat VALIDATION_FILE = caf / phenotypes / caf_validation.dat Model Config FIle POP = LDPOP = LDPATH = SUMSTATS_FILE = SUMSTATS_SUFFIX = SUMSTATS_SIZE = GENOTYPE_PREFIX = PHENOTYPE_FILES = Answer POP = EUR LDPOP = EUR LD_PATH = data /1000 G_SAMPLE SUMSTATS_FILE = ukb / sumstats / ukb.sumstats.gz SUMSTATS_SIZE =500000 GENOTYPE_PREFIX = caf / genotypes / caf_genotype PHENOTYPE_FILE = caf / phenotypes / caf_test.dat VALIDATION_FILE = caf / phenotypes / caf_validation.dat","title":"Challenge 1:"},{"location":"guide_usecases/#challenge-2","text":"I have access to GWAS summary statistics (1) and genotype/phenotype (2,3) data (>2000 samples, binary phenotype) from a moderate sized population in Eastern Europe. I have reason to believe that this population has unique LD structure and would like to incorporate this into my model. I also have GWAS (4) and genotype/phenotype data from the UKB biobank (5,6) that I wish to use to improve my results, how should I do this? ukr/sumstats/ukr.sumstats.out ukr/genotypes/chr1.bed,bim,fam...chr22.bed,bin,fam, ukr/phenotypes/ukr_test.dat, ukr/phenotypes/ukr_validation.dat ukb/sumstats/ukb.sumstats.gz ukb/genotypes/chr1.bed,bim,fam...chr22.bed,bin,fam ukb/phenotypes/ukb_test.dat, ukb/phenotypes/ukb_validation.dat Target Config File POP = LDPOP = LDPATH = SUMSTATS_PREFIX = GENOTYPE_PREFIX = PHENOTYPE_FILE = VALIDATION_FILE = [Answer] POP = ukr LDPOP = ukr * LDPATH = CUSTOM SUMSTATS_PREFIX = ukr / sumstats / ukr.sumstats SUMSTATS_SIZE =2000 GENOTYPE_PREFIX = ukr / phenotypes / chr PHENOTYPE_FILE = ukr / phenotypes / ukr_test.dat VALIDATION_FILE = ukr / phenotypes / ukr_validation.dat Model Config FIle POP = LDPOP = SUMSTATS_PREFIX = GENOTYPE_PREFIX = PHENOTYPE_FILE = VALIDATION_FILE = Answer POP = UKB LDPOP = EUR LDPATH =1000 G SUMSTATS_PREFIX = ukb / sumstats / ukb.sumstats SUMSTATS_SIZE =500000 GENOTYPE_PREFIX = ukb / genotypes / chr PHENOTYPE_FILE = ukb / phenotypes / ukb_test.dat VALIDATION_FILE = ukb / phenotypes / ukb_validation.dat","title":"Challenge 2:"},{"location":"misc_downloads/","text":"Downloading Large Files with Curl Some users who have trouble downloading large reference panels due to virus scanning or other security considerations. Curl , which comes pre-installed on most unix-based operating systems can be can be used to directly download reference panels. To do so, copy and paste the following commands into a terminal window: Download the HapMap Variant reference panel: curl --header 'Host: drive.usercontent.google.com' --header 'User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36' --header 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7' --header 'Accept-Language: en-US,en;q=0.9' --header 'Cookie: HSID=AoF9m_6tVeb09qDxB; SSID=AD-DXipuaombsBh0h; APISID=q36TGuYIe-cEv-fE/AV2VZf2ieU1cq1Igl; SAPISID=xMDkAfz0wKEwv8TL/A0IzvH3245W_Ao0TJ; __Secure-1PAPISID=xMDkAfz0wKEwv8TL/A0IzvH3245W_Ao0TJ; __Secure-3PAPISID=xMDkAfz0wKEwv8TL/A0IzvH3245W_Ao0TJ; S=billing-ui-v3=a9O0G9E9aDMupi7g1hLo9JY8pXcOwjYg:billing-ui-v3-efe=a9O0G9E9aDMupi7g1hLo9JY8pXcOwjYg; __Secure-ENID=23.SE=FF3F14B6WvDGdNY5IVFcjj2qMFKbGWbbjhNqiqkLxFG2oHfHtt2tnXGCjAJnTCwVqcrWEEapt_NteVQfEW9i-qtpqxLaTLsFUk0JJh5qvD4b2UEOcGaSqyltxuGQkoHrttfymgP4TMrPCfTMNt2xAzDGhFWMQ7REnQx_SPlhgAz9eJ07dMOaz6lOzNS5qkrwlQYPIUXE3AHGzg_mPEBKVtSiswkg71k8r8nnQ8Kkhdr8QlPxKEDjkocnV-hzhxClKWvI8aszkoNVLnopDdl7d-FRVb2FB3y_zLdcuty_lovUluU2qnxK67ZqLs_haSiIwupaDyLlLFvOlNgHQgUa3jQIal3QG3JAGhMOUPdNFga49A; SID=g.a000pwh4bxY6L7SRGa2NgTvkbkHqowyFc-VmrsLTBb4Bn-glvwPWmUosf97LDrHCniV3rhU9jwACgYKATASARUSFQHGX2Mi1AX2gxbq-i-IgVZBvuXcixoVAUF8yKqjQkGjJlIxv0GRnpcmeuWR0076; __Secure-1PSID=g.a000pwh4bxY6L7SRGa2NgTvkbkHqowyFc-VmrsLTBb4Bn-glvwPWZW2LCQ1nPyRoEV8PrMbcUAACgYKAU4SARUSFQHGX2MiDyMcSgv-3DYYi74i6Duf4xoVAUF8yKp2kt2FakB5-fVOlflvj18v0076; __Secure-3PSID=g.a000pwh4bxY6L7SRGa2NgTvkbkHqowyFc-VmrsLTBb4Bn-glvwPW_Mr9JgT-NhNItkIbcdUF8wACgYKAdcSARUSFQHGX2MiiAFSVmBNls1NPOhNHjBLrxoVAUF8yKr_B6OKBO5LEiZlqI8FhMdS0076; OSID=g.a000pgh4b5JZdIOotyBDt4f48llvybqkk49ek_LxWzjMUSyoX4tybN3JFc2uTfjP5DXeFzS7AQACgYKAbUSARUSFQHGX2MiiUeSGldKclTsgKYQ8hrK8BoVAUF8yKpfq61K8N8xSZ8IiJ-Fqsji0076; __Secure-OSID=g.a000pgh4b5JZdIOotyBDt4f48llvybqkk49ek_LxWzjMUSyoX4tyK6Ij1mUddYQFg7JOy35pXAACgYKAe4SARUSFQHGX2Mine7zuzmciEmpjJ00r_eMpRoVAUF8yKowhBBZbgC77Arqx6wbfA870076; AEC=AZ6Zc-XlHyhyvDszKJ2zEd5oHwFuRMhi50rJ5j554OKU8f2gP8qs5Sy2zw; NID=519=YRAuI47MT-mQo1GMo8ySboib3Ggz35QGzn9I5GE9fCuRRDtAA60P8wEyp2T96V1H7EDPsq9CLXWrgr_uh9SujYeMolN6bjWX6mZDJhmmNQCNeoTZEj2_nqFXa3lKIAJtjT2zDLpkBy7fNA7Plckn9-n1_2TUJI8kwcgy2ZTvk5EFc2Mqnk4LxkzefChabQCkgdKtCr7QQeamGGKs5AdKOQOz0emHwJopegGUUJFbCMbMkjGuO52Svezn8Rj7gINZdsRzSxu75rGKK3O73lyOO2PEyvzu7Tsj3Zf9UOkzOqDwfXJ-Xyl-zO_ZSPQP3E9bOeWOZPn4L8l2JXGviLU1st-hsbLuvjnUF1luZXTKwBKN3JennoNQl0HBzZSJ5Ls5n0VNAemgMA; __Secure-1PSIDTS=sidts-CjIBQT4rXwZpOKdQy5TXWSxL4jIPtSRaJFs9sFIhmbtDRQikUZ53Jwj7fcX6lJ_B2XZAwxAA; __Secure-3PSIDTS=sidts-CjIBQT4rXwZpOKdQy5TXWSxL4jIPtSRaJFs9sFIhmbtDRQikUZ53Jwj7fcX6lJ_B2XZAwxAA; SIDCC=AKEyXzXdf_K-T2xDIIC8B3u8HwTTj1bgS7NWtuOoIbHBvKIAySJebLoDEKCFyBaeot0gCtzrdRfb; __Secure-1PSIDCC=AKEyXzUQZ3S0ZpOBXzAmVcxIzaO8flwb1r42dJRNKsb4t1-Lq-1fe9RjH8BnXDB22rBUgs4NXgM; __Secure-3PSIDCC=AKEyXzWjkZxmjK5PRQxgU3THuSE10-vsuQYsuIbbQU8j0Y7clgK3U0I7ChwHlpTJWTE3FyBXW54' --header 'Connection: keep-alive' 'https://drive.usercontent.google.com/download?id=1D0ZtPrvkvznKfHjlwo6BkYIvWFIRF_9g&export=download&authuser=0&confirm=t&uuid=127669d2-7954-4e1b-9d0c-d8d69b9418d8&at=AENtkXb6-Rr6VvS4cAMuVrt0rLg1%3A1732553440826' -L -o 'HapMap_Variants.tar.gz' Download the 1000 Genomes Variants (MAF > 5%): curl --header 'Host: drive.usercontent.google.com' --header 'User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36' --header 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7' --header 'Accept-Language: en-US,en;q=0.9' --header 'Cookie: HSID=AoF9m_6tVeb09qDxB; SSID=AD-DXipuaombsBh0h; APISID=q36TGuYIe-cEv-fE/AV2VZf2ieU1cq1Igl; SAPISID=xMDkAfz0wKEwv8TL/A0IzvH3245W_Ao0TJ; __Secure-1PAPISID=xMDkAfz0wKEwv8TL/A0IzvH3245W_Ao0TJ; __Secure-3PAPISID=xMDkAfz0wKEwv8TL/A0IzvH3245W_Ao0TJ; S=billing-ui-v3=a9O0G9E9aDMupi7g1hLo9JY8pXcOwjYg:billing-ui-v3-efe=a9O0G9E9aDMupi7g1hLo9JY8pXcOwjYg; __Secure-ENID=23.SE=FF3F14B6WvDGdNY5IVFcjj2qMFKbGWbbjhNqiqkLxFG2oHfHtt2tnXGCjAJnTCwVqcrWEEapt_NteVQfEW9i-qtpqxLaTLsFUk0JJh5qvD4b2UEOcGaSqyltxuGQkoHrttfymgP4TMrPCfTMNt2xAzDGhFWMQ7REnQx_SPlhgAz9eJ07dMOaz6lOzNS5qkrwlQYPIUXE3AHGzg_mPEBKVtSiswkg71k8r8nnQ8Kkhdr8QlPxKEDjkocnV-hzhxClKWvI8aszkoNVLnopDdl7d-FRVb2FB3y_zLdcuty_lovUluU2qnxK67ZqLs_haSiIwupaDyLlLFvOlNgHQgUa3jQIal3QG3JAGhMOUPdNFga49A; SID=g.a000pwh4bxY6L7SRGa2NgTvkbkHqowyFc-VmrsLTBb4Bn-glvwPWmUosf97LDrHCniV3rhU9jwACgYKATASARUSFQHGX2Mi1AX2gxbq-i-IgVZBvuXcixoVAUF8yKqjQkGjJlIxv0GRnpcmeuWR0076; __Secure-1PSID=g.a000pwh4bxY6L7SRGa2NgTvkbkHqowyFc-VmrsLTBb4Bn-glvwPWZW2LCQ1nPyRoEV8PrMbcUAACgYKAU4SARUSFQHGX2MiDyMcSgv-3DYYi74i6Duf4xoVAUF8yKp2kt2FakB5-fVOlflvj18v0076; __Secure-3PSID=g.a000pwh4bxY6L7SRGa2NgTvkbkHqowyFc-VmrsLTBb4Bn-glvwPW_Mr9JgT-NhNItkIbcdUF8wACgYKAdcSARUSFQHGX2MiiAFSVmBNls1NPOhNHjBLrxoVAUF8yKr_B6OKBO5LEiZlqI8FhMdS0076; OSID=g.a000pgh4b5JZdIOotyBDt4f48llvybqkk49ek_LxWzjMUSyoX4tybN3JFc2uTfjP5DXeFzS7AQACgYKAbUSARUSFQHGX2MiiUeSGldKclTsgKYQ8hrK8BoVAUF8yKpfq61K8N8xSZ8IiJ-Fqsji0076; __Secure-OSID=g.a000pgh4b5JZdIOotyBDt4f48llvybqkk49ek_LxWzjMUSyoX4tyK6Ij1mUddYQFg7JOy35pXAACgYKAe4SARUSFQHGX2Mine7zuzmciEmpjJ00r_eMpRoVAUF8yKowhBBZbgC77Arqx6wbfA870076; AEC=AZ6Zc-XlHyhyvDszKJ2zEd5oHwFuRMhi50rJ5j554OKU8f2gP8qs5Sy2zw; NID=519=YRAuI47MT-mQo1GMo8ySboib3Ggz35QGzn9I5GE9fCuRRDtAA60P8wEyp2T96V1H7EDPsq9CLXWrgr_uh9SujYeMolN6bjWX6mZDJhmmNQCNeoTZEj2_nqFXa3lKIAJtjT2zDLpkBy7fNA7Plckn9-n1_2TUJI8kwcgy2ZTvk5EFc2Mqnk4LxkzefChabQCkgdKtCr7QQeamGGKs5AdKOQOz0emHwJopegGUUJFbCMbMkjGuO52Svezn8Rj7gINZdsRzSxu75rGKK3O73lyOO2PEyvzu7Tsj3Zf9UOkzOqDwfXJ-Xyl-zO_ZSPQP3E9bOeWOZPn4L8l2JXGviLU1st-hsbLuvjnUF1luZXTKwBKN3JennoNQl0HBzZSJ5Ls5n0VNAemgMA; __Secure-1PSIDTS=sidts-CjIBQT4rX9aHHfFL0QD5RBy5a2HOFYfa88q3NGcsBZD6Y95-jmz5wSzppyslHwxry8VJxRAA; __Secure-3PSIDTS=sidts-CjIBQT4rX9aHHfFL0QD5RBy5a2HOFYfa88q3NGcsBZD6Y95-jmz5wSzppyslHwxry8VJxRAA; SIDCC=AKEyXzW546Ti6p14-6zmjsZWF-Gqszb1Te985LhLWQ97A0jLjDMC-Q3ToFL9AB-a6FXdJuBLhc1z; __Secure-1PSIDCC=AKEyXzV_wMM7inJCoyXTtigBAmUBabnLS-7AJv0bS5x11saCZaGIoOmvG-jn-L7xpHOt-EeWBtI; __Secure-3PSIDCC=AKEyXzWywTxQSXpMjGbGJ90jmmWIIfVGjv1_aZEJWPgYUoE5NfN9G5Bfiik01IgMyY6n7nrPfXk' --header 'Connection: keep-alive' 'https://drive.usercontent.google.com/download?id=1c3BamSz1JpXr0QQIfyI_1nUfe0SRNXKa&export=download&authuser=0&confirm=t&uuid=4643f2b5-84eb-4895-aff2-dcecc725b06d&at=AENtkXZsJLncBxzcgWh0_UHrl541%3A1732555871814' -L -o '1000G_5P.tar.gz' Download the 1000 Genomes Variants (MAF > 1%): curl --header 'Host: drive.usercontent.google.com' --header 'User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36' --header 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7' --header 'Accept-Language: en-US,en;q=0.9' --header 'Cookie: HSID=AoF9m_6tVeb09qDxB; SSID=AD-DXipuaombsBh0h; APISID=q36TGuYIe-cEv-fE/AV2VZf2ieU1cq1Igl; SAPISID=xMDkAfz0wKEwv8TL/A0IzvH3245W_Ao0TJ; __Secure-1PAPISID=xMDkAfz0wKEwv8TL/A0IzvH3245W_Ao0TJ; __Secure-3PAPISID=xMDkAfz0wKEwv8TL/A0IzvH3245W_Ao0TJ; S=billing-ui-v3=a9O0G9E9aDMupi7g1hLo9JY8pXcOwjYg:billing-ui-v3-efe=a9O0G9E9aDMupi7g1hLo9JY8pXcOwjYg; __Secure-ENID=23.SE=FF3F14B6WvDGdNY5IVFcjj2qMFKbGWbbjhNqiqkLxFG2oHfHtt2tnXGCjAJnTCwVqcrWEEapt_NteVQfEW9i-qtpqxLaTLsFUk0JJh5qvD4b2UEOcGaSqyltxuGQkoHrttfymgP4TMrPCfTMNt2xAzDGhFWMQ7REnQx_SPlhgAz9eJ07dMOaz6lOzNS5qkrwlQYPIUXE3AHGzg_mPEBKVtSiswkg71k8r8nnQ8Kkhdr8QlPxKEDjkocnV-hzhxClKWvI8aszkoNVLnopDdl7d-FRVb2FB3y_zLdcuty_lovUluU2qnxK67ZqLs_haSiIwupaDyLlLFvOlNgHQgUa3jQIal3QG3JAGhMOUPdNFga49A; SID=g.a000pwh4bxY6L7SRGa2NgTvkbkHqowyFc-VmrsLTBb4Bn-glvwPWmUosf97LDrHCniV3rhU9jwACgYKATASARUSFQHGX2Mi1AX2gxbq-i-IgVZBvuXcixoVAUF8yKqjQkGjJlIxv0GRnpcmeuWR0076; __Secure-1PSID=g.a000pwh4bxY6L7SRGa2NgTvkbkHqowyFc-VmrsLTBb4Bn-glvwPWZW2LCQ1nPyRoEV8PrMbcUAACgYKAU4SARUSFQHGX2MiDyMcSgv-3DYYi74i6Duf4xoVAUF8yKp2kt2FakB5-fVOlflvj18v0076; __Secure-3PSID=g.a000pwh4bxY6L7SRGa2NgTvkbkHqowyFc-VmrsLTBb4Bn-glvwPW_Mr9JgT-NhNItkIbcdUF8wACgYKAdcSARUSFQHGX2MiiAFSVmBNls1NPOhNHjBLrxoVAUF8yKr_B6OKBO5LEiZlqI8FhMdS0076; OSID=g.a000pgh4b5JZdIOotyBDt4f48llvybqkk49ek_LxWzjMUSyoX4tybN3JFc2uTfjP5DXeFzS7AQACgYKAbUSARUSFQHGX2MiiUeSGldKclTsgKYQ8hrK8BoVAUF8yKpfq61K8N8xSZ8IiJ-Fqsji0076; __Secure-OSID=g.a000pgh4b5JZdIOotyBDt4f48llvybqkk49ek_LxWzjMUSyoX4tyK6Ij1mUddYQFg7JOy35pXAACgYKAe4SARUSFQHGX2Mine7zuzmciEmpjJ00r_eMpRoVAUF8yKowhBBZbgC77Arqx6wbfA870076; AEC=AZ6Zc-XlHyhyvDszKJ2zEd5oHwFuRMhi50rJ5j554OKU8f2gP8qs5Sy2zw; NID=519=YRAuI47MT-mQo1GMo8ySboib3Ggz35QGzn9I5GE9fCuRRDtAA60P8wEyp2T96V1H7EDPsq9CLXWrgr_uh9SujYeMolN6bjWX6mZDJhmmNQCNeoTZEj2_nqFXa3lKIAJtjT2zDLpkBy7fNA7Plckn9-n1_2TUJI8kwcgy2ZTvk5EFc2Mqnk4LxkzefChabQCkgdKtCr7QQeamGGKs5AdKOQOz0emHwJopegGUUJFbCMbMkjGuO52Svezn8Rj7gINZdsRzSxu75rGKK3O73lyOO2PEyvzu7Tsj3Zf9UOkzOqDwfXJ-Xyl-zO_ZSPQP3E9bOeWOZPn4L8l2JXGviLU1st-hsbLuvjnUF1luZXTKwBKN3JennoNQl0HBzZSJ5Ls5n0VNAemgMA; __Secure-1PSIDTS=sidts-CjIBQT4rX9aHHfFL0QD5RBy5a2HOFYfa88q3NGcsBZD6Y95-jmz5wSzppyslHwxry8VJxRAA; __Secure-3PSIDTS=sidts-CjIBQT4rX9aHHfFL0QD5RBy5a2HOFYfa88q3NGcsBZD6Y95-jmz5wSzppyslHwxry8VJxRAA; SIDCC=AKEyXzUiO_pLVAb23idvGPu7fHoi3Dwr0MlkRTq-3mfdJvUoJ5LnQZVsEpIqYOcDwzG_c6b58MNd; __Secure-1PSIDCC=AKEyXzXpb6cPwIVV-O6nZGS4DLJ6n2eSQ-tn7H2Tr4qzm-dPszPhrc5uMGs7gigI9ciHK1zu_sE; __Secure-3PSIDCC=AKEyXzWX3r7mum9LZCsP8e1L5-vcVusdBRGI1lbxGg5EO0_enN49Hw3LnG9RXt9SCqxno649eNY' --header 'Connection: keep-alive' 'https://drive.usercontent.google.com/download?id=18xgsyDymbjeSOv1QS2ULQFaru5NVjwGR&export=download&authuser=0&confirm=t&uuid=c9c72932-d3eb-469c-b7d7-5bc87e7ea9e3&at=AENtkXZB1O2wYgcHdAbK8cKi3EBZ%3A1732556118270' -L -o '1000G_1P.tar.gz' Unzipping Large Files on the Command Line: Reference panels can then be unzipped into where bridgePRS reference panels are stored using the following command: tar -zxvf \"REF_PANEL.tar.gz\" -C \"PATH-TO-BRIDGE-PRS-PANELS\"","title":"Direct Downloads"},{"location":"misc_downloads/#downloading-large-files-with-curl","text":"Some users who have trouble downloading large reference panels due to virus scanning or other security considerations. Curl , which comes pre-installed on most unix-based operating systems can be can be used to directly download reference panels. To do so, copy and paste the following commands into a terminal window: Download the HapMap Variant reference panel: curl --header 'Host: drive.usercontent.google.com' --header 'User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36' --header 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7' --header 'Accept-Language: en-US,en;q=0.9' --header 'Cookie: HSID=AoF9m_6tVeb09qDxB; SSID=AD-DXipuaombsBh0h; APISID=q36TGuYIe-cEv-fE/AV2VZf2ieU1cq1Igl; SAPISID=xMDkAfz0wKEwv8TL/A0IzvH3245W_Ao0TJ; __Secure-1PAPISID=xMDkAfz0wKEwv8TL/A0IzvH3245W_Ao0TJ; __Secure-3PAPISID=xMDkAfz0wKEwv8TL/A0IzvH3245W_Ao0TJ; S=billing-ui-v3=a9O0G9E9aDMupi7g1hLo9JY8pXcOwjYg:billing-ui-v3-efe=a9O0G9E9aDMupi7g1hLo9JY8pXcOwjYg; __Secure-ENID=23.SE=FF3F14B6WvDGdNY5IVFcjj2qMFKbGWbbjhNqiqkLxFG2oHfHtt2tnXGCjAJnTCwVqcrWEEapt_NteVQfEW9i-qtpqxLaTLsFUk0JJh5qvD4b2UEOcGaSqyltxuGQkoHrttfymgP4TMrPCfTMNt2xAzDGhFWMQ7REnQx_SPlhgAz9eJ07dMOaz6lOzNS5qkrwlQYPIUXE3AHGzg_mPEBKVtSiswkg71k8r8nnQ8Kkhdr8QlPxKEDjkocnV-hzhxClKWvI8aszkoNVLnopDdl7d-FRVb2FB3y_zLdcuty_lovUluU2qnxK67ZqLs_haSiIwupaDyLlLFvOlNgHQgUa3jQIal3QG3JAGhMOUPdNFga49A; SID=g.a000pwh4bxY6L7SRGa2NgTvkbkHqowyFc-VmrsLTBb4Bn-glvwPWmUosf97LDrHCniV3rhU9jwACgYKATASARUSFQHGX2Mi1AX2gxbq-i-IgVZBvuXcixoVAUF8yKqjQkGjJlIxv0GRnpcmeuWR0076; __Secure-1PSID=g.a000pwh4bxY6L7SRGa2NgTvkbkHqowyFc-VmrsLTBb4Bn-glvwPWZW2LCQ1nPyRoEV8PrMbcUAACgYKAU4SARUSFQHGX2MiDyMcSgv-3DYYi74i6Duf4xoVAUF8yKp2kt2FakB5-fVOlflvj18v0076; __Secure-3PSID=g.a000pwh4bxY6L7SRGa2NgTvkbkHqowyFc-VmrsLTBb4Bn-glvwPW_Mr9JgT-NhNItkIbcdUF8wACgYKAdcSARUSFQHGX2MiiAFSVmBNls1NPOhNHjBLrxoVAUF8yKr_B6OKBO5LEiZlqI8FhMdS0076; OSID=g.a000pgh4b5JZdIOotyBDt4f48llvybqkk49ek_LxWzjMUSyoX4tybN3JFc2uTfjP5DXeFzS7AQACgYKAbUSARUSFQHGX2MiiUeSGldKclTsgKYQ8hrK8BoVAUF8yKpfq61K8N8xSZ8IiJ-Fqsji0076; __Secure-OSID=g.a000pgh4b5JZdIOotyBDt4f48llvybqkk49ek_LxWzjMUSyoX4tyK6Ij1mUddYQFg7JOy35pXAACgYKAe4SARUSFQHGX2Mine7zuzmciEmpjJ00r_eMpRoVAUF8yKowhBBZbgC77Arqx6wbfA870076; AEC=AZ6Zc-XlHyhyvDszKJ2zEd5oHwFuRMhi50rJ5j554OKU8f2gP8qs5Sy2zw; NID=519=YRAuI47MT-mQo1GMo8ySboib3Ggz35QGzn9I5GE9fCuRRDtAA60P8wEyp2T96V1H7EDPsq9CLXWrgr_uh9SujYeMolN6bjWX6mZDJhmmNQCNeoTZEj2_nqFXa3lKIAJtjT2zDLpkBy7fNA7Plckn9-n1_2TUJI8kwcgy2ZTvk5EFc2Mqnk4LxkzefChabQCkgdKtCr7QQeamGGKs5AdKOQOz0emHwJopegGUUJFbCMbMkjGuO52Svezn8Rj7gINZdsRzSxu75rGKK3O73lyOO2PEyvzu7Tsj3Zf9UOkzOqDwfXJ-Xyl-zO_ZSPQP3E9bOeWOZPn4L8l2JXGviLU1st-hsbLuvjnUF1luZXTKwBKN3JennoNQl0HBzZSJ5Ls5n0VNAemgMA; __Secure-1PSIDTS=sidts-CjIBQT4rXwZpOKdQy5TXWSxL4jIPtSRaJFs9sFIhmbtDRQikUZ53Jwj7fcX6lJ_B2XZAwxAA; __Secure-3PSIDTS=sidts-CjIBQT4rXwZpOKdQy5TXWSxL4jIPtSRaJFs9sFIhmbtDRQikUZ53Jwj7fcX6lJ_B2XZAwxAA; SIDCC=AKEyXzXdf_K-T2xDIIC8B3u8HwTTj1bgS7NWtuOoIbHBvKIAySJebLoDEKCFyBaeot0gCtzrdRfb; __Secure-1PSIDCC=AKEyXzUQZ3S0ZpOBXzAmVcxIzaO8flwb1r42dJRNKsb4t1-Lq-1fe9RjH8BnXDB22rBUgs4NXgM; __Secure-3PSIDCC=AKEyXzWjkZxmjK5PRQxgU3THuSE10-vsuQYsuIbbQU8j0Y7clgK3U0I7ChwHlpTJWTE3FyBXW54' --header 'Connection: keep-alive' 'https://drive.usercontent.google.com/download?id=1D0ZtPrvkvznKfHjlwo6BkYIvWFIRF_9g&export=download&authuser=0&confirm=t&uuid=127669d2-7954-4e1b-9d0c-d8d69b9418d8&at=AENtkXb6-Rr6VvS4cAMuVrt0rLg1%3A1732553440826' -L -o 'HapMap_Variants.tar.gz' Download the 1000 Genomes Variants (MAF > 5%): curl --header 'Host: drive.usercontent.google.com' --header 'User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36' --header 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7' --header 'Accept-Language: en-US,en;q=0.9' --header 'Cookie: HSID=AoF9m_6tVeb09qDxB; SSID=AD-DXipuaombsBh0h; APISID=q36TGuYIe-cEv-fE/AV2VZf2ieU1cq1Igl; SAPISID=xMDkAfz0wKEwv8TL/A0IzvH3245W_Ao0TJ; __Secure-1PAPISID=xMDkAfz0wKEwv8TL/A0IzvH3245W_Ao0TJ; __Secure-3PAPISID=xMDkAfz0wKEwv8TL/A0IzvH3245W_Ao0TJ; S=billing-ui-v3=a9O0G9E9aDMupi7g1hLo9JY8pXcOwjYg:billing-ui-v3-efe=a9O0G9E9aDMupi7g1hLo9JY8pXcOwjYg; __Secure-ENID=23.SE=FF3F14B6WvDGdNY5IVFcjj2qMFKbGWbbjhNqiqkLxFG2oHfHtt2tnXGCjAJnTCwVqcrWEEapt_NteVQfEW9i-qtpqxLaTLsFUk0JJh5qvD4b2UEOcGaSqyltxuGQkoHrttfymgP4TMrPCfTMNt2xAzDGhFWMQ7REnQx_SPlhgAz9eJ07dMOaz6lOzNS5qkrwlQYPIUXE3AHGzg_mPEBKVtSiswkg71k8r8nnQ8Kkhdr8QlPxKEDjkocnV-hzhxClKWvI8aszkoNVLnopDdl7d-FRVb2FB3y_zLdcuty_lovUluU2qnxK67ZqLs_haSiIwupaDyLlLFvOlNgHQgUa3jQIal3QG3JAGhMOUPdNFga49A; SID=g.a000pwh4bxY6L7SRGa2NgTvkbkHqowyFc-VmrsLTBb4Bn-glvwPWmUosf97LDrHCniV3rhU9jwACgYKATASARUSFQHGX2Mi1AX2gxbq-i-IgVZBvuXcixoVAUF8yKqjQkGjJlIxv0GRnpcmeuWR0076; __Secure-1PSID=g.a000pwh4bxY6L7SRGa2NgTvkbkHqowyFc-VmrsLTBb4Bn-glvwPWZW2LCQ1nPyRoEV8PrMbcUAACgYKAU4SARUSFQHGX2MiDyMcSgv-3DYYi74i6Duf4xoVAUF8yKp2kt2FakB5-fVOlflvj18v0076; __Secure-3PSID=g.a000pwh4bxY6L7SRGa2NgTvkbkHqowyFc-VmrsLTBb4Bn-glvwPW_Mr9JgT-NhNItkIbcdUF8wACgYKAdcSARUSFQHGX2MiiAFSVmBNls1NPOhNHjBLrxoVAUF8yKr_B6OKBO5LEiZlqI8FhMdS0076; OSID=g.a000pgh4b5JZdIOotyBDt4f48llvybqkk49ek_LxWzjMUSyoX4tybN3JFc2uTfjP5DXeFzS7AQACgYKAbUSARUSFQHGX2MiiUeSGldKclTsgKYQ8hrK8BoVAUF8yKpfq61K8N8xSZ8IiJ-Fqsji0076; __Secure-OSID=g.a000pgh4b5JZdIOotyBDt4f48llvybqkk49ek_LxWzjMUSyoX4tyK6Ij1mUddYQFg7JOy35pXAACgYKAe4SARUSFQHGX2Mine7zuzmciEmpjJ00r_eMpRoVAUF8yKowhBBZbgC77Arqx6wbfA870076; AEC=AZ6Zc-XlHyhyvDszKJ2zEd5oHwFuRMhi50rJ5j554OKU8f2gP8qs5Sy2zw; NID=519=YRAuI47MT-mQo1GMo8ySboib3Ggz35QGzn9I5GE9fCuRRDtAA60P8wEyp2T96V1H7EDPsq9CLXWrgr_uh9SujYeMolN6bjWX6mZDJhmmNQCNeoTZEj2_nqFXa3lKIAJtjT2zDLpkBy7fNA7Plckn9-n1_2TUJI8kwcgy2ZTvk5EFc2Mqnk4LxkzefChabQCkgdKtCr7QQeamGGKs5AdKOQOz0emHwJopegGUUJFbCMbMkjGuO52Svezn8Rj7gINZdsRzSxu75rGKK3O73lyOO2PEyvzu7Tsj3Zf9UOkzOqDwfXJ-Xyl-zO_ZSPQP3E9bOeWOZPn4L8l2JXGviLU1st-hsbLuvjnUF1luZXTKwBKN3JennoNQl0HBzZSJ5Ls5n0VNAemgMA; __Secure-1PSIDTS=sidts-CjIBQT4rX9aHHfFL0QD5RBy5a2HOFYfa88q3NGcsBZD6Y95-jmz5wSzppyslHwxry8VJxRAA; __Secure-3PSIDTS=sidts-CjIBQT4rX9aHHfFL0QD5RBy5a2HOFYfa88q3NGcsBZD6Y95-jmz5wSzppyslHwxry8VJxRAA; SIDCC=AKEyXzW546Ti6p14-6zmjsZWF-Gqszb1Te985LhLWQ97A0jLjDMC-Q3ToFL9AB-a6FXdJuBLhc1z; __Secure-1PSIDCC=AKEyXzV_wMM7inJCoyXTtigBAmUBabnLS-7AJv0bS5x11saCZaGIoOmvG-jn-L7xpHOt-EeWBtI; __Secure-3PSIDCC=AKEyXzWywTxQSXpMjGbGJ90jmmWIIfVGjv1_aZEJWPgYUoE5NfN9G5Bfiik01IgMyY6n7nrPfXk' --header 'Connection: keep-alive' 'https://drive.usercontent.google.com/download?id=1c3BamSz1JpXr0QQIfyI_1nUfe0SRNXKa&export=download&authuser=0&confirm=t&uuid=4643f2b5-84eb-4895-aff2-dcecc725b06d&at=AENtkXZsJLncBxzcgWh0_UHrl541%3A1732555871814' -L -o '1000G_5P.tar.gz' Download the 1000 Genomes Variants (MAF > 1%): curl --header 'Host: drive.usercontent.google.com' --header 'User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36' --header 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7' --header 'Accept-Language: en-US,en;q=0.9' --header 'Cookie: HSID=AoF9m_6tVeb09qDxB; SSID=AD-DXipuaombsBh0h; APISID=q36TGuYIe-cEv-fE/AV2VZf2ieU1cq1Igl; SAPISID=xMDkAfz0wKEwv8TL/A0IzvH3245W_Ao0TJ; __Secure-1PAPISID=xMDkAfz0wKEwv8TL/A0IzvH3245W_Ao0TJ; __Secure-3PAPISID=xMDkAfz0wKEwv8TL/A0IzvH3245W_Ao0TJ; S=billing-ui-v3=a9O0G9E9aDMupi7g1hLo9JY8pXcOwjYg:billing-ui-v3-efe=a9O0G9E9aDMupi7g1hLo9JY8pXcOwjYg; __Secure-ENID=23.SE=FF3F14B6WvDGdNY5IVFcjj2qMFKbGWbbjhNqiqkLxFG2oHfHtt2tnXGCjAJnTCwVqcrWEEapt_NteVQfEW9i-qtpqxLaTLsFUk0JJh5qvD4b2UEOcGaSqyltxuGQkoHrttfymgP4TMrPCfTMNt2xAzDGhFWMQ7REnQx_SPlhgAz9eJ07dMOaz6lOzNS5qkrwlQYPIUXE3AHGzg_mPEBKVtSiswkg71k8r8nnQ8Kkhdr8QlPxKEDjkocnV-hzhxClKWvI8aszkoNVLnopDdl7d-FRVb2FB3y_zLdcuty_lovUluU2qnxK67ZqLs_haSiIwupaDyLlLFvOlNgHQgUa3jQIal3QG3JAGhMOUPdNFga49A; SID=g.a000pwh4bxY6L7SRGa2NgTvkbkHqowyFc-VmrsLTBb4Bn-glvwPWmUosf97LDrHCniV3rhU9jwACgYKATASARUSFQHGX2Mi1AX2gxbq-i-IgVZBvuXcixoVAUF8yKqjQkGjJlIxv0GRnpcmeuWR0076; __Secure-1PSID=g.a000pwh4bxY6L7SRGa2NgTvkbkHqowyFc-VmrsLTBb4Bn-glvwPWZW2LCQ1nPyRoEV8PrMbcUAACgYKAU4SARUSFQHGX2MiDyMcSgv-3DYYi74i6Duf4xoVAUF8yKp2kt2FakB5-fVOlflvj18v0076; __Secure-3PSID=g.a000pwh4bxY6L7SRGa2NgTvkbkHqowyFc-VmrsLTBb4Bn-glvwPW_Mr9JgT-NhNItkIbcdUF8wACgYKAdcSARUSFQHGX2MiiAFSVmBNls1NPOhNHjBLrxoVAUF8yKr_B6OKBO5LEiZlqI8FhMdS0076; OSID=g.a000pgh4b5JZdIOotyBDt4f48llvybqkk49ek_LxWzjMUSyoX4tybN3JFc2uTfjP5DXeFzS7AQACgYKAbUSARUSFQHGX2MiiUeSGldKclTsgKYQ8hrK8BoVAUF8yKpfq61K8N8xSZ8IiJ-Fqsji0076; __Secure-OSID=g.a000pgh4b5JZdIOotyBDt4f48llvybqkk49ek_LxWzjMUSyoX4tyK6Ij1mUddYQFg7JOy35pXAACgYKAe4SARUSFQHGX2Mine7zuzmciEmpjJ00r_eMpRoVAUF8yKowhBBZbgC77Arqx6wbfA870076; AEC=AZ6Zc-XlHyhyvDszKJ2zEd5oHwFuRMhi50rJ5j554OKU8f2gP8qs5Sy2zw; NID=519=YRAuI47MT-mQo1GMo8ySboib3Ggz35QGzn9I5GE9fCuRRDtAA60P8wEyp2T96V1H7EDPsq9CLXWrgr_uh9SujYeMolN6bjWX6mZDJhmmNQCNeoTZEj2_nqFXa3lKIAJtjT2zDLpkBy7fNA7Plckn9-n1_2TUJI8kwcgy2ZTvk5EFc2Mqnk4LxkzefChabQCkgdKtCr7QQeamGGKs5AdKOQOz0emHwJopegGUUJFbCMbMkjGuO52Svezn8Rj7gINZdsRzSxu75rGKK3O73lyOO2PEyvzu7Tsj3Zf9UOkzOqDwfXJ-Xyl-zO_ZSPQP3E9bOeWOZPn4L8l2JXGviLU1st-hsbLuvjnUF1luZXTKwBKN3JennoNQl0HBzZSJ5Ls5n0VNAemgMA; __Secure-1PSIDTS=sidts-CjIBQT4rX9aHHfFL0QD5RBy5a2HOFYfa88q3NGcsBZD6Y95-jmz5wSzppyslHwxry8VJxRAA; __Secure-3PSIDTS=sidts-CjIBQT4rX9aHHfFL0QD5RBy5a2HOFYfa88q3NGcsBZD6Y95-jmz5wSzppyslHwxry8VJxRAA; SIDCC=AKEyXzUiO_pLVAb23idvGPu7fHoi3Dwr0MlkRTq-3mfdJvUoJ5LnQZVsEpIqYOcDwzG_c6b58MNd; __Secure-1PSIDCC=AKEyXzXpb6cPwIVV-O6nZGS4DLJ6n2eSQ-tn7H2Tr4qzm-dPszPhrc5uMGs7gigI9ciHK1zu_sE; __Secure-3PSIDCC=AKEyXzWX3r7mum9LZCsP8e1L5-vcVusdBRGI1lbxGg5EO0_enN49Hw3LnG9RXt9SCqxno649eNY' --header 'Connection: keep-alive' 'https://drive.usercontent.google.com/download?id=18xgsyDymbjeSOv1QS2ULQFaru5NVjwGR&export=download&authuser=0&confirm=t&uuid=c9c72932-d3eb-469c-b7d7-5bc87e7ea9e3&at=AENtkXZB1O2wYgcHdAbK8cKi3EBZ%3A1732556118270' -L -o '1000G_1P.tar.gz'","title":"Downloading Large Files with Curl"},{"location":"misc_downloads/#unzipping-large-files-on-the-command-line","text":"Reference panels can then be unzipped into where bridgePRS reference panels are stored using the following command: tar -zxvf \"REF_PANEL.tar.gz\" -C \"PATH-TO-BRIDGE-PRS-PANELS\"","title":"Unzipping Large Files on the Command Line:"},{"location":"misc_faq/","text":"Frequently Asked Questions We will continue to update this list to address the more common questions. I've receive the following error message, what should I do? No permission You must fix permission.","title":"Frequently Asked Questions"},{"location":"misc_faq/#frequently-asked-questions","text":"We will continue to update this list to address the more common questions. I've receive the following error message, what should I do? No permission You must fix permission.","title":"Frequently Asked Questions"},{"location":"misc_log/","text":"Update Log 2023-08-15 v0.1.7 Added Sample Thousand Genomes Data. 2023-08-05 v0.1.7 Identified and fixed a bug for binary traits.","title":"Update Log"},{"location":"misc_log/#update-log","text":"","title":"Update Log"},{"location":"misc_log/#2023-08-15-v017","text":"Added Sample Thousand Genomes Data.","title":"2023-08-15 v0.1.7"},{"location":"misc_log/#2023-08-05-v017","text":"Identified and fixed a bug for binary traits.","title":"2023-08-05 v0.1.7"},{"location":"quikstart_data/","text":"Toy Data Toy data reflecting African, European and East Asian populations are located in the directories data/pop_AFR/ , data/pop_EUR/ and data/pop_EAS/ . Each directory contains (1) GWAS summary stats file(s), (2) genotype file(s) (plink format), and (3) phenotype file(s) (txt format), as well as a population config file that lists the path to each file. For more information on file type requirements or how to create population configuration files for your own data, see Guide: Input Data . To run the demo tutorial go to the next page.","title":"Quikstart data"},{"location":"quikstart_data/#toy-data","text":"Toy data reflecting African, European and East Asian populations are located in the directories data/pop_AFR/ , data/pop_EUR/ and data/pop_EAS/ . Each directory contains (1) GWAS summary stats file(s), (2) genotype file(s) (plink format), and (3) phenotype file(s) (txt format), as well as a population config file that lists the path to each file. For more information on file type requirements or how to create population configuration files for your own data, see Guide: Input Data . To run the demo tutorial go to the next page.","title":"Toy Data"},{"location":"quikstart_demo/","text":"BridgePRS download comes with example toy data in the folders data/pop_AFR , data/pop_EUR and data/pop_EAS . Each directory contains (1) GWAS summary statistic files, (2) genotype files (plink binary format), and (3) phenotype files (txt format). A continuous and binary phenotype are given in the phenotype files, both phenotypes use the same summary statistics, For more information on file type requirements or how to create population configuration files for your own data, see Guide: Input Data . BridgePRS uses configuation files which contain the information of the populations being analysed: the population name, paths for the input data and the column headers of the summary statistics files. Three example configuations files are provided, one for each population: data/eur.config , data/afr.config , data/eas.config . These files Run the demo: To analyses the continuous trait (y) ./bridgePRS pipeline go -o out1 --config_files data/afr.config data/eur.config --phenotype y Verify that the summary figure out1/bridgeSummary.png shown below is created. To analyse the binary phenotype \"y.binary\" ./bridgePRS pipeline go -o out2 --config_files data/afr.config data/eur.config --phenotype y.binary Results: If BridgePRS runs successfully on the toy data, go to the next page for information on interpretation of the output result directories.","title":"Example Run"},{"location":"quikstart_demo/#run-the-demo","text":"To analyses the continuous trait (y) ./bridgePRS pipeline go -o out1 --config_files data/afr.config data/eur.config --phenotype y Verify that the summary figure out1/bridgeSummary.png shown below is created. To analyse the binary phenotype \"y.binary\" ./bridgePRS pipeline go -o out2 --config_files data/afr.config data/eur.config --phenotype y.binary","title":"Run the demo:"},{"location":"quikstart_demo/#results","text":"If BridgePRS runs successfully on the toy data, go to the next page for information on interpretation of the output result directories.","title":"Results:"},{"location":"quikstart_result/","text":"Interpreting results The pipeline command used on the previous page runs the entire bridgePRS multi-ancestry analysis. Final model results are written to the directory prs-combined_AFR-EUR/ , the important files are: File Contents AFR_weighted_combined_var_explained.txt \\(R^2\\) in validation samples of the four models estimated by BridgePRS and contribution (weights) of models M1-3 to the final weighted model, see pipeline AFR_weighted_combined_preds.dat Individual PRS of the four model in validation samples AFR_weighted_combined_snp_weights.dat SNP weights of the weighted model","title":"Output directories"},{"location":"quikstart_result/#interpreting-results","text":"The pipeline command used on the previous page runs the entire bridgePRS multi-ancestry analysis. Final model results are written to the directory prs-combined_AFR-EUR/ , the important files are: File Contents AFR_weighted_combined_var_explained.txt \\(R^2\\) in validation samples of the four models estimated by BridgePRS and contribution (weights) of models M1-3 to the final weighted model, see pipeline AFR_weighted_combined_preds.dat Individual PRS of the four model in validation samples AFR_weighted_combined_snp_weights.dat SNP weights of the weighted model","title":"Interpreting results"},{"location":"req_mac/","text":"Mac specific issues Mac security will not initially allow plink to run and will flag this error Do not click: Move To Trash . Instead click on the top right hand corner of the box, or stop running BridgePRS and follow these instructions to give your system permission to call plink from BridgePRS. After doing so you should be aware that if you have moved plink to the trash that you will have to recover it and place it in it's original directory (\"src/Python/Xtra\"). Additionally, empty files created by a failed attempt to run plink can cause problems if BridgePRS tries to recover your progress. Restarting a bridgePRS run You can avoid this problem by manually deleting your output directory and starting over, or by using the restart flag: $./bridgePRS pipeline go -o out1 --config_files data/afr.config data/eur.config --phenotype y --restart This will force bridgePRS to restart every subprogram from the beginning. Changing System Permissions 0- Shortcut Fix Shortcut: Users report that this shortcut can also be used to change program permissions: User finder navigate to the file in question. Right click on the icon and select open . A warning will pop-up. Click open and this program can be run in the future. 1- Change System Settings (Allow Exceptions) By default macOS allows you to open apps from the official Mac App Store only, If you have this set as your default you can change this by first: Opening System Preferences. Going to the Security & Privacy tab. Clicking on the lock and entering your password. Changing settings to include identified developers (see below): After expanding permissions to include \"identified developers\" you can obtain further permission to run Plink or any other unapproved program by: Opening System Preferences. Going to Security & Privacy and selecting the General tab. If it happened recently, this page will give you an override button to Open Anyway . Enter your password as above and click this button. You will be asked to once more which will create an exception allowing you to run Plink in the future.","title":"Mac Specific"},{"location":"req_mac/#mac-specific-issues","text":"Mac security will not initially allow plink to run and will flag this error Do not click: Move To Trash . Instead click on the top right hand corner of the box, or stop running BridgePRS and follow these instructions to give your system permission to call plink from BridgePRS. After doing so you should be aware that if you have moved plink to the trash that you will have to recover it and place it in it's original directory (\"src/Python/Xtra\"). Additionally, empty files created by a failed attempt to run plink can cause problems if BridgePRS tries to recover your progress. Restarting a bridgePRS run You can avoid this problem by manually deleting your output directory and starting over, or by using the restart flag: $./bridgePRS pipeline go -o out1 --config_files data/afr.config data/eur.config --phenotype y --restart This will force bridgePRS to restart every subprogram from the beginning.","title":"Mac specific issues"},{"location":"req_mac/#changing-system-permissions","text":"","title":"Changing System Permissions"},{"location":"req_mac/#0-shortcut-fix","text":"Shortcut: Users report that this shortcut can also be used to change program permissions: User finder navigate to the file in question. Right click on the icon and select open . A warning will pop-up. Click open and this program can be run in the future.","title":"0- Shortcut Fix"},{"location":"req_mac/#1-change-system-settings-allow-exceptions","text":"By default macOS allows you to open apps from the official Mac App Store only, If you have this set as your default you can change this by first: Opening System Preferences. Going to the Security & Privacy tab. Clicking on the lock and entering your password. Changing settings to include identified developers (see below): After expanding permissions to include \"identified developers\" you can obtain further permission to run Plink or any other unapproved program by: Opening System Preferences. Going to Security & Privacy and selecting the General tab. If it happened recently, this page will give you an override button to Open Anyway . Enter your password as above and click this button. You will be asked to once more which will create an exception allowing you to run Plink in the future.","title":"1- Change System Settings (Allow Exceptions)"},{"location":"req_software/","text":"Requirements BridgePRS uses R ( \\(\\geq\\) 3.6.3), plink , and runs using a python3 wrapper. R packages BridgePRS requires the following R packages: BEDMatrix, boot, data.table, doMC, glmnet, MASS, optparse, parallel, and R.utils R Packages These packages can be installed from inside an R terminal using the command: $ R install.packages(c(\"BEDMatrix\",\"boot\",\"data.table\",\"doMC\",\"glmnet\",\"MASS\",\"optparse\",\"parallel\",\"R.utils\")) Plink Plink documentation and downlaod can be found here . The BridgePRS downlaod includes plink for Linux and MacOs and the software will attempt to locate the correct version. To override this behaviour and use a specific version please use the flag --plinkPath $PLINKPATH to direct BridgePRS to the file location. Extra MacOs Security: MacOs often block executables if they are not approved from the app store. You may have to change your settings to allow Plink to be called For instructions on how to do so, please click here . Python Python3+ can be downloaded here . Optional plots are created using the python library [ matplotlib ] (https://matplotlib.org/stable/users/installing/index.html)). Bash BridgePRS can also be run using a shell script as described here . Shell scripts that run the example data are provided with the download. BridgePRS check Once BridgePRS has been downloaded and made executable the following command will check system compatibility and prompt you to install missing software: ./bridgePRS check requirements Checking Requirements: System: platform=linux, cores(available)=8, cores(used)=1 (TIP: Using More Than One Core Will Improve Performace (e.g. ---cores 7)) Plink: found=true, path=/home/tade/Bin/plink R: found=true, path=/usr/bin/R, version=3.6.3 (packages=up to date) Python3: found=true, path=/usr/bin/python3, matplotlib=true Complete","title":"Software"},{"location":"req_software/#requirements","text":"BridgePRS uses R ( \\(\\geq\\) 3.6.3), plink , and runs using a python3 wrapper.","title":"Requirements"},{"location":"req_software/#r-packages","text":"BridgePRS requires the following R packages: BEDMatrix, boot, data.table, doMC, glmnet, MASS, optparse, parallel, and R.utils R Packages These packages can be installed from inside an R terminal using the command: $ R install.packages(c(\"BEDMatrix\",\"boot\",\"data.table\",\"doMC\",\"glmnet\",\"MASS\",\"optparse\",\"parallel\",\"R.utils\"))","title":"R packages"},{"location":"req_software/#plink","text":"Plink documentation and downlaod can be found here . The BridgePRS downlaod includes plink for Linux and MacOs and the software will attempt to locate the correct version. To override this behaviour and use a specific version please use the flag --plinkPath $PLINKPATH to direct BridgePRS to the file location. Extra MacOs Security: MacOs often block executables if they are not approved from the app store. You may have to change your settings to allow Plink to be called For instructions on how to do so, please click here .","title":"Plink"},{"location":"req_software/#python","text":"Python3+ can be downloaded here . Optional plots are created using the python library [ matplotlib ] (https://matplotlib.org/stable/users/installing/index.html)).","title":"Python"},{"location":"req_software/#bash","text":"BridgePRS can also be run using a shell script as described here . Shell scripts that run the example data are provided with the download.","title":"Bash"},{"location":"req_software/#bridgeprs-check","text":"Once BridgePRS has been downloaded and made executable the following command will check system compatibility and prompt you to install missing software: ./bridgePRS check requirements Checking Requirements: System: platform=linux, cores(available)=8, cores(used)=1 (TIP: Using More Than One Core Will Improve Performace (e.g. ---cores 7)) Plink: found=true, path=/home/tade/Bin/plink R: found=true, path=/usr/bin/R, version=3.6.3 (packages=up to date) Python3: found=true, path=/usr/bin/python3, matplotlib=true Complete","title":"BridgePRS check"},{"location":"req_system/","text":"Preparation After downloading and unzipping BridgePRS a directory with the following contents will be created: bridgePRS <--- program executable data/ <--- example toy data folder LICENSE README.me src/ <--- source code folder Using the terminal, type the following command from within the directory: chmod +x bridgePRS chmod +x src/Python/Xtra/plink* to make bridgePRS and plink executable Requirements Next, confirm that the required libraries and dependencies are installed and available by following the instructions in Software. Alternatively, you can type: ./bridgePRS check requirements and bridgePRS will check your system and provide further instructions to help you install missing dependencies. Warning: Extra MacOs Security: If you see this msg when running 'check requirements' (or any other time): You will have to change your system settings to allow bridgePRS to call plink. For instructions on how to do so, please click here .","title":"System"},{"location":"req_system/#preparation","text":"After downloading and unzipping BridgePRS a directory with the following contents will be created: bridgePRS <--- program executable data/ <--- example toy data folder LICENSE README.me src/ <--- source code folder Using the terminal, type the following command from within the directory: chmod +x bridgePRS chmod +x src/Python/Xtra/plink* to make bridgePRS and plink executable","title":"Preparation"},{"location":"req_system/#requirements","text":"Next, confirm that the required libraries and dependencies are installed and available by following the instructions in Software. Alternatively, you can type: ./bridgePRS check requirements and bridgePRS will check your system and provide further instructions to help you install missing dependencies. Warning: Extra MacOs Security: If you see this msg when running 'check requirements' (or any other time): You will have to change your system settings to allow bridgePRS to call plink. For instructions on how to do so, please click here .","title":"Requirements"}]}